{"version":3,"sources":["redux/constants/charts/index.js","logo.svg","redux/store/configureStore.js","redux/constants/tabpanes/index.js","redux/actions/tabpanes/index.js","components/header/Header.jsx","views/MainView.jsx","redux/store/index.js","config/index.js","api/index.js","api/service.js","components/charts/Echarts.jsx","views/Charts/pages/Income_ticket_dataset.jsx","redux/actions/charts/index.js","views/HomePage/HomePage.jsx","views/DataInput/ControlForm.jsx","views/DataInput/DataInput.jsx","views/Query/testQuery/TestQuery.jsx","views/Statistics/StatementMain.jsx","views/Charts/pages/Sell_ticket.jsx","views/Charts/pages/Income_ticket.jsx","views/Statistics/Detail/StatisticsDetail.jsx","views/Statistics/testLine/TestLine.jsx","views/Charts/ChartsMain.jsx","views/Charts/pages/Dash_Financials.jsx","views/Charts/pages/Dash_Attendance.jsx","views/Charts/pages/Dash_TicketTypes.jsx","views/Charts/pages/Dash_PricingTiers.jsx","routes/index.js","routes/react-router-config.js","App.js","serviceWorker.js","index.js","redux/reducers/app/index.js","redux/reducers/tabpanes/index.js","redux/reducers/charts/index.js","redux/reducers/index.js","redux/store/middlewares.js","redux/store/configureStore.prod.js"],"names":["__webpack_require__","d","__webpack_exports__","SAVE_BATCHS","module","exports","p","require","PUSH_TAB_LIST","REMOVE_TAB_LIST","CLEAR_TAB_LIST","SET_ACTIVE","LISTEN_HASH","HEADER_MENU","CACHE_PANES","addTabList","tabItem","type","actionType","removeTabList","key","setActiveKey","cachePanes","TabPane","Tabs","Header","onChange","activeKey","_this","props","onEdit","targetKey","action","react_default","a","createElement","row","col","span","this","children","tabs","rdx_activeKey","tabPosition","rdx_panes","map","item","tab","concat","title","closable","Component","connect","state","ownnProps","tabpanes","panes","dispatch","bindActionCreators","Sider","Layout","Content","MainView","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","menuOnchange","_ref","name","toggle","setState","collapsed","layout","className","trigger","collapsible","src","logo","alt","menu","theme","mode","defaultSelectedKeys","onClick","Item","icon","header_Header","renderRoutes","route","routes","rdx_menuData","menuData","withRouter","store","configureStore","CONFIG","SERVER_BASE_URL","FILE_ACCEPT","BASE_URL","axios","defaults","baseURL","service","uploadXLSX","params","post","getList","pageSize","startTime","endTime","pageNum","_ref$batchs","batchs","getAllOfBatchs","get","getTestLineS","getAvailableBatchNum","_ref2","_ref2$batch","batch","getRptList","_ref3","_ref3$current","current","searchDetail","_ref4","_ref4$batch","getChartData","_ref5","_ref5$batchs","getSingleField","_ref6","_ref6$statTable","statTable","_ref6$batch","deleteBatch","_ref7","_ref7$batchs","getState","Echarts","myCharts","statData","option","getData","charts","API","then","res","data","success","console","log","mapper","initChart","echarts","init","refs","chart","setOption","onDataSet","assertThisInitialized","_this$props","width","height","ref","style","legend1","value","inc_early_bird","inc_advance","inc_gameday","inc_other","Income_ticket_dataset","result","sort","b","moment","game_date","format","toConsumableArray","sItem","legend","tooltip","showContent","dataset","source","xAxis","yAxis","gridIndex","grid","top","series","smooth","seriesLayoutBy","id","radius","center","label","formatter","encode","itemName","Echarts_Echarts","component","on","event","xAxisInfo","axesInfo","dimension","set_batch","set_name","HomePage","ok","_this2","batchList","nextProps","Income_ticket_dataset_Income_ticket_dataset","Option","Select","optList","0","1","2","3","4","5","6","formItemLayout","labelCol","offset","wrapperCol","ControlForm","FieldData","initialValue","attr","form","setFieldsValue","weekday","day","rulse","transform","rules","pattern","required","message","addonBefore","input","es_select","entries","arr","date_picker","getFieldDecorator","es_form","assign","onSubmit","handleSubmit","initData","renderFieldItem","Form","create","Step","Steps","Dragger","Upload","confirm","Modal","DataInput","steps","rule","_rule","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","batchNum","repeat","warn","msg","fileList","length","stop","apply","arguments","content","upload_props","size","placeholder","e","target","_rule2","_callee2","rc","_context2","Promise","resolve","reject","validateFields","err","vals","formData","sent","DataInput_ControlForm","multiple","beforeUpload","file","accept","join","info","status","error","_callee3","newArr","_context3","stepStatus","t0","submit","onOk","FormData","append","forEach","kv","onCancel","es_steps","index","es_button","marginLeft","RangePicker","DatePicker","TestQuery","reset","dateString","objectSpread","_res$data$data","list","count","column","autoid","allOfBatchs","handleChange","onPageChange","page","_x","_x2","delete","justify","align","showTime","overflow","defaultValue","TestQuery_Option","shape","popconfirm","okText","cancelText","onConfirm","fontSize","table","columns","dataSource","scroll","x","pagination","total","gridStyle","textAlign","StatementMain","rptList","path","empty","card","Grid","_this$state","i","push","opposition","statistic","total_tickets_ebrite","total_tics_income","total_income_tics_merch_other","JSON","parse","Bundle","sum","income_lbl_card_tics","income_other_tics","income_groups_tickets","income_merch_other_none_group_packages","legend2","season_tics_comps","tickers_sold","total_adults_groups","tot_child_groups","tickets_scanned","Sell_ticket","mapper1","orient","left","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","mapper2","chartStyle","Income_ticket","ticket_type","price_tier","arg1","seriesName","percent","income","selectedMode","normal","position","labelLine","show","cnt","bgType","StatisticsDetail","getDetail","match","detail","describe","DetailGroup","getComparDetail","comparBatch","comparStatData","onSwitchChange","isComparison","handleSelectChange","getComparList","_this3","margin","es_switch","checked","filter","StatisticsDetail_Option","slicedToArray","descriptions","bordered","K","group","V","padding","whiteSpace","textOverflow","backgroundColor","prefix","suffix","String","color","lineHeight","toFixed","keys","Sell_ticket_Sell_ticket","Income_ticket_Income_ticket","TestLine","yArr","stack","dom","document","getElementById","axisPointer","right","bottom","containLabel","ChartsMain","datasetClick","singleClick","multipleClick","ChartsMain_Option","marginTop","Dash_Financials","oppositions","stat","Dash_Attendance","total_adults","total_concessions","total_children","total_family1","total_family2","inc_audults","inc_concessions","inc_children","inc_family1","inc_family2","legend3","legend4","Dash_TicketTypes","toolbox","feature","saveAsImage","boundaryGap","areaStyle","mapper3","mapper4","early_bird_tics","advance_tics","gameday_tics","other_tics","Dash_PricingTiers","DashFinancials","render","alive","lastPanes","some","location","pathname","KeepAlive","disabled","DataInput_DataInput","exact","StatisticsMain","unmount","Dash_Financials_Dash_Financials","Dash_Attendance_Dash_Attendance","Dash_TicketTypes_Dash_TicketTypes","Dash_PricingTiers_Dash_PricingTiers","Income_Cartesian_default","ex","reactRouter","React","_extends","prototype","hasOwnProperty","App","react_router_dom","extraProps","switchProps","Routes","CacheSwitch","CacheRoute","strict","when","cacheKey","behavior","cached","display","undefined","Boolean","window","hostname","hash","replace","open","ReactDOM","es","Provider","src_App","navigator","serviceWorker","ready","registration","unregister","initialState","initialPanes","url","href","origin","Income_Cartesian","rootReducer","combineReducers","appReducer","ActionTypes","nextPanes","defineProperty","persistReducer","storage","applyMiddleware","createStore","middlewares"],"mappings":"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","file":"static/js/main.58c0a2b1.chunk.js","sourcesContent":["export const SAVE_BATCHS = 'SAVE_BATCHS';","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","if (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./configureStore.prod');\r\n} else {\r\n  module.exports = require('./configureStore.dev');\r\n}\r\n","export const PUSH_TAB_LIST = 'PUSH_TAB_LIST';\r\nexport const REMOVE_TAB_LIST = 'REMOVE_TAB_LIST';\r\nexport const CLEAR_TAB_LIST = 'FUNNEL_PARAMS';\r\nexport const SET_ACTIVE = 'SET_ACTIVE';\r\nexport const LISTEN_HASH = 'LISTEN_HASH';\r\nexport const HEADER_MENU = 'HEADER_MENU';\r\nexport const CACHE_PANES = 'CACHE_PANES';\r\n","import * as actionType from '../../constants/tabpanes'\r\n\r\nexport const addTabList = (tabItem) => ({\r\n    type: actionType.PUSH_TAB_LIST,\r\n    tabItem\r\n})\r\nexport const removeTabList = (key) => ({\r\n    type: actionType.REMOVE_TAB_LIST,\r\n    key\r\n})\r\n// export const clearTabList = () => ({\r\n//     type: actionType.CLEAR_TAB_LIST\r\n// })\r\nexport const setActiveKey = (key) => ({\r\n    type: actionType.SET_ACTIVE,\r\n    key\r\n})\r\nexport const cachePanes = () => ({\r\n    type: actionType.CACHE_PANES,\r\n})","import React, { Component } from 'react';\r\nimport { Tabs, Row, Col } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as tabpanes from '../../redux/actions/tabpanes'\r\nconst { TabPane } = Tabs;\r\n\r\nclass Header extends Component {\r\n  onChange = (activeKey) => {\r\n    // 先缓存操作前的panes数组\r\n    this.props.cachePanes()\r\n    // panes进行增减操作\r\n    this.props.setActiveKey(activeKey)\r\n  }\r\n  onEdit = (targetKey, action) => {\r\n    if (action === 'remove') {\r\n      // 先缓存操作前的panes数组\r\n      this.props.cachePanes()\r\n      // panes进行增减操作\r\n      this.props.removeTabList(targetKey)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col span={1}>{this.props.children}</Col>\r\n        <Col span={23}>\r\n          <Tabs\r\n            activeKey={this.props.rdx_activeKey}\r\n            tabPosition='top'\r\n            type=\"editable-card\"\r\n            onChange={this.onChange}\r\n            onEdit={this.onEdit}>\r\n            {this.props.rdx_panes.map(item => (\r\n              <TabPane tab={`${item.title}`} key={item.key} closable={item.closable} />\r\n            ))}\r\n          </Tabs>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownnProps) => ({\r\n  rdx_panes: state.tabpanes.panes,\r\n  rdx_activeKey: state.tabpanes.activeKey\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  removeTabList: bindActionCreators(tabpanes.removeTabList, dispatch),\r\n  setActiveKey: bindActionCreators(tabpanes.setActiveKey, dispatch),\r\n  cachePanes: bindActionCreators(tabpanes.cachePanes, dispatch)\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React, { Component } from 'react';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport logo from '../logo.svg';\r\nimport Header from '../components/header/Header';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { renderRoutes } from 'react-router-config';\r\n// import { renderRoutes } from '../routes/react-router-config'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as tabpanes from '../redux/actions/tabpanes'\r\n\r\nconst { Sider, Content } = Layout;\r\n\r\nclass MainView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: false\r\n    };\r\n  }\r\n  menuOnchange = ({ item, key }) => {\r\n    // 先缓存操作前的panes数组\r\n    this.props.cachePanes()\r\n    // panes进行增减操作\r\n    this.props.addTabList({\r\n      key: key,\r\n      title: item.props.name,\r\n      closable: true\r\n    })\r\n  };\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout className=\"MainView\">\r\n        <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n          <div>\r\n            <img src={logo} className=\"App-logo\" alt=\"\" />\r\n            <div className=\"logo\" />\r\n          </div>\r\n          <Menu\r\n            theme=\"dark\"\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={['/homepage']}\r\n            onClick={this.menuOnchange}\r\n          >\r\n            <Menu.Item key=\"/homepage\" name='Homepage'>\r\n              <Icon type=\"contacts\" />\r\n              <span>Homepage</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/input\" name='ImportData'>\r\n              <Icon type=\"file-excel\" />\r\n              <span>ImportData</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/query\" name='QueryData'>\r\n              <Icon type=\"area-chart\" />\r\n              <span>QueryData</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/statement\" name='Statement'>\r\n              <Icon type=\"area-chart\" />\r\n              <span>Statement</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/charts\" name='Charts'>\r\n              <Icon type=\"area-chart\" />\r\n              <span>Charts</span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <Header className='header'>\r\n            <Icon\r\n              className=\"trigger\"\r\n              type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n              onClick={this.toggle}\r\n            />\r\n          </Header>\r\n          <Content className='content'>{renderRoutes(this.props.route.routes)}</Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownnProps) => ({\r\n  rdx_menuData: state.tabpanes.menuData,\r\n  rdx_activeKey: state.tabpanes.activeKey\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  addTabList: bindActionCreators(tabpanes.addTabList, dispatch),\r\n  cachePanes: bindActionCreators(tabpanes.cachePanes, dispatch)\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MainView));\r\n","import configureStore from './configureStore'\r\n// import { persistStore } from 'redux-persist'\r\nconst store = configureStore()\r\n// let persistor = persistStore(store)\r\n\r\nexport {\r\n  store,\r\n  // persistor,\r\n}","export const CONFIG = {\r\n  SERVER_BASE_URL: 'http://127.0.0.1:7001',\r\n  FILE_ACCEPT: ['.xls', '.xlsm', '.xlsx']\r\n};\r\n","import axios from 'axios';\r\nimport { CONFIG } from '../config';\r\nconst BASE_URL = CONFIG.SERVER_BASE_URL;\r\n\r\n// 默认请求路径\r\naxios.defaults.baseURL = BASE_URL;\r\n// 配置拦截器\r\n\r\nexport default axios;\r\n","import axios from './';\r\n\r\nfunction uploadXLSX(params) {\r\n  return axios.post('/input/xlsx2db', params);\r\n}\r\n\r\nfunction getList({\r\n  pageSize, //每页条数\r\n  startTime, //开始时间\r\n  endTime, //结束时间\r\n  pageNum, //当前页\r\n  batchs: batchs = [] //batchs\r\n}) {\r\n  let url = '/result/pagedata';\r\n  let params = { pageSize, startTime, endTime, pageNum, batchs };\r\n  return axios.post(url, params);\r\n}\r\nfunction getTestLineS() {\r\n  let url = '/statistics/teststand';\r\n  return axios.get(url);\r\n}\r\nfunction getAvailableBatchNum({\r\n  batch: batch = null //批次号\r\n}) {\r\n  let url = '/input/repeatBatch';\r\n  let params = { batch };\r\n  return axios.get(url, { params });\r\n}\r\nfunction getRptList({\r\n  current: current = 1 //当前页\r\n}) {\r\n  let url = '/statistics/pagedata';\r\n  let params = { current };\r\n  return axios.post(url, params);\r\n}\r\nfunction searchDetail({ batch: batch = null }) {\r\n  let url = '/statistics/searchDetail';\r\n  let params = { batch };\r\n  return axios.post(url, params);\r\n}\r\nfunction getAllOfBatchs() {\r\n  let url = '/result/batchSelect';\r\n  let params = {};\r\n  return axios.get(url, { params });\r\n}\r\n// 获取图表数据\r\nfunction getChartData({ batchs: batchs = [] }) {\r\n  let url = '/statistics/getChartData';\r\n  let params = { batchs };\r\n  return axios.post(url, params);\r\n}\r\n// 获取单场分析数据\r\nfunction getSingleField({\r\n  statTable: statTable = '', // 种类\r\n  batch: batch = '' // 批次号\r\n}) {\r\n  let url = '/statistics/getSingleField';\r\n  let params = { statTable, batch };\r\n  return axios.post(url, params);\r\n}\r\n// 删除batch\r\nfunction deleteBatch({ batchs: batchs = [] }) {\r\n  let url = '/result/deleteBatch';\r\n  let params = { batchs };\r\n  return axios.post(url, params);\r\n}\r\n\r\nexport default {\r\n  uploadXLSX, //上传excel\r\n  getList, //翻页表格\r\n  getAllOfBatchs, //获取batch下拉列表值\r\n  getTestLineS, //ceshi\r\n  getAvailableBatchNum, //检查批次号是否重复\r\n  getRptList, //翻页卡片\r\n  searchDetail, //查询统计详情\r\n  getChartData, //获取图表数据\r\n  getSingleField, //获取单场分析数据\r\n  deleteBatch //删除数据\r\n};\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport echarts from 'echarts'\r\nimport { store } from '../../redux/store'\r\nimport API from '../../api/service'\r\n\r\nconst { getState } = store\r\n\r\nexport default class Echarts extends Component {\r\n  static propTypes = {\r\n    type: PropTypes.string, //图表种类，用来请求数据\r\n    mapper: PropTypes.func, //图表opcion,用于生成echarts的option\r\n    height: PropTypes.number, //高度 默认800\r\n    width: PropTypes.number, //宽度 默认1200\r\n  }\r\n  myCharts = null\r\n  statData = {} //存放数据\r\n  option = {} //echart配置\r\n\r\n  getData = () => {\r\n    const { type } = this.props\r\n    // 去store中取对应的数组\r\n    const batchs = getState().charts[type]\r\n    API.getChartData({ batchs }).then(res => {\r\n      if (res.data.success) {\r\n        this.statData = res.data.data\r\n        console.log(this.statData)\r\n        this.option = this.props.mapper(this.statData)\r\n        this.initChart()\r\n      }\r\n    })\r\n  }\r\n  componentWillMount() {\r\n\r\n  }\r\n  async componentDidMount() {\r\n    this.getData()\r\n\r\n  }\r\n  initChart = () => {\r\n    this.myCharts = echarts.init(this.refs.chart);\r\n    this.myCharts.setOption(this.option, true);\r\n    // 自定义事件\r\n    if (this.props.onDataSet) {\r\n      this.props.onDataSet(this)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { width, height } = this.props\r\n    return (\r\n      <div>\r\n        <div ref='chart' style={{ height: `${height || 800}px`, width: `${width || 1200}px` }}></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Echarts from '../../../components/charts/Echarts'\r\nimport moment from 'moment'\r\nconst legend1 = [\r\n  {\r\n    name: 'Early Bird',\r\n    value: (data) => data.inc_early_bird\r\n  },\r\n  {\r\n    name: 'Advance',\r\n    value: (data) => data.inc_advance\r\n  },\r\n  {\r\n    name: 'Gameday',\r\n    value: (data) => data.inc_gameday\r\n  },\r\n  {\r\n    name: 'Other',\r\n    value: (data) => data.inc_other\r\n  }\r\n]\r\nconst legend2 = [\r\n  {\r\n    name: '% Adults',\r\n    value: (data) => (data.total_adults / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Concessions',\r\n    value: (data) => (data.total_concessions / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Children',\r\n    value: (data) => (data.total_children / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Family1',\r\n    value: (data) => (data.total_family1 / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Family2',\r\n    value: (data) => (data.total_family2 / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  }\r\n]\r\nexport default class Income_ticket_dataset extends Component {\r\n\r\n  mapper(statData) {\r\n    statData.result.sort((a, b) => moment(a.game_date) - moment(b.game_date))\r\n    console.log([\r\n      ['game_date'].concat(statData.result.map(item => moment(item.game_date).format('ll'))),\r\n      ...legend1.map(item => {\r\n        return [item.name].concat(statData.result.map(sItem => item.value(sItem)))\r\n      })\r\n    ])\r\n    return {\r\n      legend: {},\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        showContent: false\r\n      },\r\n      dataset: {\r\n        source: [\r\n          ['game_date'].concat(statData.result.map(item => moment(item.game_date).format('ll'))),\r\n          ...legend1.map(item => {\r\n            return [item.name].concat(statData.result.map(sItem => item.value(sItem)))\r\n          })\r\n        ]\r\n      },\r\n      xAxis: { type: 'category' },\r\n      yAxis: { gridIndex: 0 },\r\n      grid: { top: '55%' },\r\n      series: [\r\n        ...legend1.map(item => ({ type: 'line', smooth: true, seriesLayoutBy: 'row' })),\r\n        {\r\n          type: 'pie',\r\n          id: 'pie',\r\n          radius: '30%',\r\n          center: ['50%', '25%'],\r\n          label: {\r\n            formatter: '{b}: £{@2012} ({d}%)'\r\n          },\r\n          encode: {\r\n            itemName: 'game_date',\r\n            value: '2012',\r\n            tooltip: '2012'\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='ChartView'>\r\n        <Echarts type='Income_ticket_dataset' mapper={this.mapper} onDataSet={\r\n          (component) => {\r\n            component.myCharts.on('updateAxisPointer', (event) => {\r\n              var xAxisInfo = event.axesInfo[0];\r\n              if (xAxisInfo) {\r\n                var dimension = xAxisInfo.value + 1;\r\n                component.myCharts.setOption({\r\n                  series: {\r\n                    id: 'pie',\r\n                    label: {\r\n                      formatter: '{b}: {@[' + dimension + ']} ({d}%)'\r\n                    },\r\n                    encode: {\r\n                      value: dimension,\r\n                      tooltip: dimension\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          }\r\n        } />\r\n      </div>\r\n    )\r\n  }\r\n}","import * as actionType from '../../constants/charts'\r\n\r\nexport const set_batch = (set_name,batchs) => ({\r\n    type: actionType.SAVE_BATCHS,\r\n    set_name,batchs\r\n})\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Dataset from '../Charts/pages/Income_ticket_dataset'\r\nimport API from '../../api/service'\r\nimport * as charts from '../../redux/actions/charts'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    ok: false\r\n  }\r\n  componentWillMount() {\r\n    API.getAllOfBatchs().then(res => {\r\n      if (res.data.success) {\r\n        const batchList = res.data.data.map(item => item.batch)\r\n        // 把这些batch号存到name名下的数组中\r\n        this.props.set_batch('Income_ticket_dataset', batchList)\r\n        this.setState({ ok: true })\r\n      }\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    console.log('我是home，我mount了');\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps)\r\n  }\r\n  componentWillUnmount() {\r\n    console.log('不管用啊');\r\n  }\r\n  render() {\r\n    return this.state.ok ? <div><Dataset /></div> : null;\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownnProps) => ({\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  set_batch: bindActionCreators(charts.set_batch, dispatch)\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(HomePage));\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Input, Select, DatePicker, Form, Row, Col } from 'antd'\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\n\r\nconst optList = { '0': 'Sunday', '1': 'Monday', '2': 'Tuesday', '3': 'Wednesday', '4': 'Thursday', '5': 'Friday', '6': 'Saturday' }\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    offset: 4,\r\n    span: 6\r\n  },\r\n  wrapperCol: {\r\n    span: 6\r\n  },\r\n};\r\n\r\nclass ControlForm extends Component {\r\n  FieldData = [\r\n    // 比赛日期\r\n    {\r\n      id: 'game_date',\r\n      label: 'Game Date',\r\n      initialValue: moment(),\r\n      attr: {\r\n        onChange: (value) => {\r\n          // 修改weekday的值\r\n          this.props.form.setFieldsValue({ 'weekday': optList[value.day()] })\r\n          console.log(value)\r\n        }\r\n      },\r\n      rulse: [\r\n        { transform: (value) => moment(value).format('YYYY-MM-DD HH:mm:ss') }\r\n      ],\r\n      type: 'DatePicker'\r\n    },\r\n    // 比赛对阵\r\n    {\r\n      id: 'opposition',\r\n      label: 'Opposition',\r\n      initialValue: null,\r\n      type: 'Input',\r\n      rules: [{ pattern: /.*/ }, {\r\n        required: true,\r\n        message: 'opposition is null',\r\n      }]\r\n    },\r\n    // 星期\r\n    {\r\n      id: 'weekday',\r\n      label: 'Weekday',\r\n      initialValue: 'Monday',\r\n      type: 'Select',\r\n      optList: optList,\r\n    },\r\n    {\r\n      id: 'days_since_prev_game',\r\n      label: 'Days Since Prev Game',\r\n      initialValue: '0',\r\n      type: 'Input',\r\n    },\r\n    {\r\n      id: 'no_of_groups',\r\n      label: 'No. of Groups',\r\n      initialValue: '0',\r\n      type: 'Input',\r\n    },\r\n    {\r\n      id: 'group_adults',\r\n      label: 'Group Adults',\r\n      initialValue: '0',\r\n      type: 'Input',\r\n    },\r\n    {\r\n      id: 'group_children',\r\n      label: 'Group Children',\r\n      initialValue: '0',\r\n      type: 'Input',\r\n    },\r\n    {\r\n      id: 'group_tickets_revenue',\r\n      label: 'Group Tickets Revenue',\r\n      initialValue: '0',\r\n      type: 'Input',\r\n      attr: {\r\n        addonBefore: '￡'\r\n      }\r\n    },\r\n    {\r\n      id: 'eventbrite_add_ons',\r\n      label: 'Eventbrite Add-ons',\r\n      initialValue: '0',\r\n      type: 'Input',\r\n      attr: {\r\n        addonBefore: '￡'\r\n      }\r\n    },\r\n    {\r\n      id: 'group_add_ons_food',\r\n      label: 'Group Add-ons/Food',\r\n      initialValue: '0',\r\n      type: 'Input',\r\n      attr: {\r\n        addonBefore: '￡'\r\n      }\r\n    },\r\n    {\r\n      id: 'other_add_ons_food',\r\n      label: 'Other Add-ons/Food',\r\n      initialValue: '0',\r\n      type: 'Input',\r\n      attr: {\r\n        addonBefore: '￡'\r\n      }\r\n    },\r\n    {\r\n      id: 'spare_comps_printed',\r\n      label: 'Spare Comps Printed',\r\n      initialValue: '0',\r\n      type: 'Input'\r\n    },\r\n    {\r\n      id: 'comparable_game_date',\r\n      label: 'Comparable Game Date',\r\n      initialValue: moment(),\r\n      type: 'DatePicker',\r\n      rulse: [\r\n        { transform: (value) => moment(value).format('YYYY-MM-DD HH:mm:ss') }\r\n      ],\r\n    }\r\n  ]\r\n\r\n  renderFieldItem(item) {\r\n    switch (item.type) {\r\n      case 'Input': return <Input {...item.attr} />\r\n      case 'Select': return <Select>\r\n        {\r\n          Object.entries(item.optList).map(arr => <Option value={arr[0]} key={arr[0]}>{arr[1]}</Option>)\r\n        }\r\n      </Select>\r\n      case 'DatePicker': return <DatePicker {...item.attr} />\r\n      default: return <Input />\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    return (\r\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Row>\r\n          {\r\n            this.FieldData.map(item => {\r\n              return <Col span={12}><Form.Item label={item.label} key={item.label}>\r\n                {getFieldDecorator(item.id, { rules: item.rules, initialValue: this.props.initData[item.id] || item.initialValue })(\r\n                  this.renderFieldItem(item)\r\n                )}\r\n              </Form.Item></Col>\r\n            })\r\n          }\r\n        </Row>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\nControlForm.propTypes = {\r\n  initData: PropTypes.object\r\n}\r\n\r\nexport default Form.create({ name: 'ControlForm' })(ControlForm);","import React, { Component } from 'react';\r\nimport { Upload, Icon, message, Steps, Button, Input, Modal } from 'antd';\r\nimport moment from 'moment';\r\nimport API from '../../api/service'\r\nimport { CONFIG } from '../../config'\r\nimport ControlForm from './ControlForm'\r\n\r\n\r\nconst { Step } = Steps;\r\nconst { Dragger } = Upload;\r\nconst { confirm } = Modal;\r\n\r\nexport default class DataInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 0,\r\n      fileList: [],\r\n      batchNum: '',\r\n      stepStatus: [false, false, false],\r\n      formData: {}\r\n    };\r\n  }\r\n  steps = () => [\r\n    {\r\n      title: `First:Select your files and add a batch number`,\r\n      rule: async () => {\r\n        // 验证一下批次号是否重复\r\n        return API.getAvailableBatchNum({ batch: this.state.batchNum }).then(res => {\r\n          if (res.data.success) {\r\n            if (res.data.data.repeat) {\r\n              // 重复的\r\n              message.warn(res.data.msg)\r\n            }\r\n            else {\r\n              message.success(res.data.msg)\r\n            }\r\n            return this.state.fileList.length > 0 && !res.data.data.repeat\r\n          }\r\n        })\r\n      },\r\n      msg: () => {\r\n        message.warn('Please select the file')\r\n      },\r\n      content: (\r\n        <div style={{height:'100%'}}>\r\n          <Dragger {...this.upload_props} fileList={this.state.fileList}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <Icon type=\"inbox\" />\r\n            </p>\r\n            <p className=\"ant-upload-text\">\r\n              Click or drag file to this area to upload\r\n          </p>\r\n            <p className=\"ant-upload-hint\">\r\n              Support for a single or bulk upload. Strictly prohibit from\r\n              uploading company data or other band files\r\n          </p>\r\n          </Dragger>\r\n          <Input\r\n            size=\"large\"\r\n            placeholder=\"Please enter batch numberlarge size\"\r\n            value={this.state.batchNum}\r\n            onChange={e => {\r\n              this.setState({ batchNum: e.target.value });\r\n            }}\r\n          />\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: 'Second:Adding descriptions to the data',\r\n      rule: async () => {\r\n        if (this.refs.ControlForm) {\r\n          let rc = await new Promise((resolve, reject) => {\r\n            this.refs.ControlForm.validateFields((err, vals) => {\r\n              if (!err) {\r\n                this.setState({ formData: vals })\r\n              }\r\n              resolve(!err && true)\r\n            })\r\n          })\r\n          return rc\r\n        }\r\n      },\r\n      msg: () => {\r\n        message.warn('Please add a description')\r\n      },\r\n      content: (\r\n        <div>\r\n          <h3>\r\n            You have to add descriptions to the data, which are essential for statistics.\r\n          </h3>\r\n          <p>\r\n            Q:Input error data?\r\n          </p>\r\n          <p>\r\n            A:Enter the &lt;BasicData&gt; page, use batch number to delete misleading data, and then re-import\r\n          </p>\r\n          <ControlForm ref='ControlForm' initData={this.state.formData} />\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: 'Post Data',\r\n      content: (\r\n        <h2>To complete the two steps,click Done button to upload file</h2>\r\n      )\r\n    }\r\n  ];\r\n  upload_props = {\r\n    name: 'file',\r\n    multiple: false,\r\n    beforeUpload: (file, fileList) => {\r\n      let batchNum = `${moment().format('YYYYMMDDhhmmss')}-${file.name}`;\r\n      this.setState({ fileList, batchNum });\r\n      return false;\r\n    },\r\n    accept: CONFIG.FILE_ACCEPT.join(','),\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    }\r\n  };\r\n  next = async () => {\r\n    // 验证\r\n    let newArr = [...this.state.stepStatus]\r\n    newArr[this.state.current] = await this.steps()[this.state.current].rule() && true\r\n    const current = this.state.current + 1;\r\n    if (newArr[this.state.current]) {\r\n      this.setState({ current, stepStatus: newArr });\r\n    } else {\r\n      this.steps()[this.state.current].msg()\r\n    }\r\n\r\n  }\r\n\r\n  prev() {\r\n    // 验证\r\n    let newArr = [...this.state.stepStatus]\r\n    newArr[this.state.current] = this.steps()[this.state.current].rule() && true\r\n    const current = this.state.current - 1;\r\n    this.setState({ current, stepStatus: newArr });\r\n  }\r\n  submit = () => {\r\n    confirm({\r\n      title: 'Submit',\r\n      content: 'After confirming that your input is correct, click the button to submit',\r\n      onOk:()=>{\r\n        const formData = new FormData();\r\n        formData.append('batch', this.state.batchNum)\r\n        // 循环添加batch描述\r\n        Object.entries(this.state.formData).forEach(kv => formData.append(...kv))\r\n        this.state.fileList.forEach((file) => {   // fileList 是要上传的文件数组\r\n          formData.append('files', file);\r\n        });\r\n\r\n        return API.uploadXLSX(formData).then(res => {\r\n          if (res.data.success) {\r\n            message.success(res.data.msg)\r\n           \r\n          } else {\r\n            message.warn(res.data.msg)\r\n          }\r\n           // 重置\r\n           this.setState({\r\n            current: 0,\r\n            fileList: [],\r\n            batchNum: '',\r\n            stepStatus: [false, false, false],\r\n            formData: {}\r\n          })\r\n        })\r\n      },\r\n      onCancel() { },\r\n    });\r\n\r\n  };\r\n  render() {\r\n    const { current } = this.state;\r\n    const steps = this.steps();\r\n    return (\r\n      <div className=\"DataInput\">\r\n        <div className=\"DataInput-inner shadow-card\">\r\n          <Steps current={current}>\r\n            {steps.map((item, index) => (\r\n              <Step\r\n                key={item.title}\r\n                title={item.title}\r\n              />\r\n            ))}\r\n          </Steps>\r\n          <div className=\"steps-content\">{steps[current].content}</div>\r\n          <div className=\"steps-action\">\r\n            {current < steps.length - 1 && (\r\n              <Button type=\"primary\" onClick={() => this.next()}>\r\n                Next\r\n              </Button>\r\n            )}\r\n            {current === steps.length - 1 && (\r\n              <Button type=\"primary\" onClick={this.submit}>\r\n                Upload\r\n              </Button>\r\n            )}\r\n            {current > 0 && (\r\n              <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\r\n                Previous\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport API from '../../../api/service'\r\nimport moment from 'moment'\r\nimport { Table, Row, Col, DatePicker, Select, Button, Popconfirm, Icon, message } from 'antd'\r\n\r\nconst { Option } = Select;\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default class TestQuery extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      params: {\r\n        pageSize: 20,\r\n        startTime: '2018-01-01 00:00:00',\r\n        endTime: '2019-08-13 00:00:00',\r\n        pageNum: 1,\r\n        batchs: []\r\n      },\r\n      list: [],\r\n      count: 0,\r\n      column: [], //表头数组\r\n      allOfBatchs: [] //批次数组\r\n    }\r\n  }\r\n  reset = () => {\r\n\r\n  }\r\n\r\n  onChange = (value, dateString) => {\r\n    this.setState({\r\n      params: { ...this.state.params, startTime: value[0].format('YYYY-MM-DD HH:mm:ss'), endTime: value[1].format('YYYY-MM-DD HH:mm:ss') }\r\n    })\r\n  }\r\n\r\n  getData = () => {\r\n    API.getList(this.state.params).then(res => {\r\n      if (res.data.success) {\r\n\r\n        let { list, count, column, batchs } = res.data.data\r\n        list = list.map(item => ({ ...item, key: item.autoid }))\r\n        // column = column.map(item => ({ ...item }))\r\n        this.setState({ list, count, column, allOfBatchs: batchs })\r\n      }\r\n    })\r\n  }\r\n  handleChange = (value) => {\r\n    this.setState({ params: { ...this.state.params, batchs: value } })\r\n  }\r\n  // 翻页\r\n  onPageChange = async (page, pageSize) => {\r\n    await this.setState({ params: { ...this.state.params, pageNum: page } })\r\n    this.getData()\r\n  }\r\n  componentWillMount() {\r\n    this.getData()\r\n  }\r\n  delete = () => {\r\n    API.deleteBatch({ batchs: this.state.params.batchs }).then(res => {\r\n      if (res.data.success) {\r\n        message.success('success')\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='TestQuery'>\r\n        {/* 上面搜索项 */}\r\n        <Row type='flex' justify='center' align='bottom' className='TestQuery-filter shadow-card'>\r\n          {/* 时间选择器 */}\r\n          <Col span={6}>\r\n            Choose a time\r\n            <RangePicker\r\n              showTime={{ format: 'HH:mm:ss' }}\r\n              format=\"YYYY-MM-DD HH:mm:ss\"\r\n              placeholder={['Start Time', 'End Time']}\r\n              onChange={this.onChange}\r\n              onOk={this.onOk}\r\n              value={[moment(this.state.params.startTime), moment(this.state.params.endTime)]}\r\n            />\r\n          </Col>\r\n          {/* 选择批次 */}\r\n          <Col span={6}>\r\n            Choose a batch\r\n            <Select\r\n              mode=\"multiple\"\r\n              style={{ width: '100%', overflow: 'hidden' }}\r\n              placeholder=\"Please select\"\r\n              defaultValue={[]}\r\n              onChange={this.handleChange}\r\n            >\r\n              {\r\n                this.state.allOfBatchs.map(item => <Option key={item}>{item}</Option>)\r\n              }\r\n            </Select>\r\n          </Col>\r\n          {/* 查询 */}\r\n          <Col span={6}> <Button onClick={() => {\r\n            this.setState({\r\n              params: {\r\n                ...this.state.params,\r\n                pageNum: 1,\r\n              },\r\n              list: [],\r\n              count: 0,\r\n              column: [],\r\n              allOfBatchs: []\r\n            }, this.getData)\r\n          }} type=\"primary\" shape=\"circle\" icon=\"search\" /></Col>\r\n          {/* 删除 */}\r\n          <Col>\r\n            <Popconfirm title=\"The batch you choose will be deleted. Do you want to continue?\" okText=\"Yes\" cancelText=\"No\" onConfirm={() => {\r\n              this.delete()\r\n            }}>\r\n              <Icon type=\"delete\" style={{ fontSize: '24px' }} />\r\n            </Popconfirm>\r\n          </Col>\r\n        </Row>\r\n        {/* 下面表格 */}\r\n        <Table\r\n          className='TestQuery-table shadow-card'\r\n          columns={this.state.column}\r\n          dataSource={this.state.list}\r\n          scroll={{ x: 3000 }}\r\n          size='small'\r\n          pagination={{\r\n            pageSize: this.state.params.pageSize,\r\n            total: this.state.count,\r\n            current: this.state.params.pageNum,\r\n            onChange: this.onPageChange\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Row, Col, Statistic, Pagination, Empty } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport API from '../../api/service'\r\nimport * as tabpanes from '../../redux/actions/tabpanes'\r\nimport moment from 'moment'\r\n\r\nconst gridStyle = {\r\n  height: '250px',\r\n  width: '25%',\r\n  textAlign: 'center',\r\n};\r\n\r\nclass StatementMain extends Component {\r\n  state = {\r\n    current: 1,\r\n    rptList: [],\r\n    total: 0\r\n  }\r\n  onClick = ({ name, path }) => {\r\n    // 先缓存操作前的panes数组\r\n    this.props.cachePanes()\r\n    // panes进行增减操作\r\n    this.props.addTabList({\r\n      key: path,\r\n      title: name,\r\n      closable: true\r\n    })\r\n  }\r\n  componentWillMount() {\r\n    // 获取列表\r\n    this.getRptList()\r\n  }\r\n  getRptList = () => {\r\n    API.getRptList({ current: this.state.current }).then(res => {\r\n      if (res.data.success) {\r\n        this.setState({\r\n          rptList: res.data.data.list,\r\n          total: res.data.data.count\r\n        })\r\n      }\r\n    })\r\n  }\r\n  empty = () =>\r\n    <Card.Grid style={gridStyle}>\r\n      <Row><Empty /></Row>\r\n    </Card.Grid>\r\n\r\n  render() {\r\n    const { rptList, total } = this.state\r\n    let length = rptList.length\r\n    // 数组补齐\r\n    for (let i = length; i < 12; i++) {\r\n      rptList.push(false)\r\n    }\r\n    return (\r\n      <div className='StatementMain'>\r\n        <Card title=\"Card Title\">\r\n          {\r\n            rptList.map(item => item ? <Card.Grid onClick={() => this.onClick({ name: item.opposition, path: `/statement/stat-detail/${item.batch}` })} style={gridStyle}>\r\n              <Row>\r\n                <Col><h2>{item.opposition}</h2></Col>\r\n                <Col span={12}>\r\n                  <Statistic title=\"Total Tickets(E'brite)\" value={item.total_tickets_ebrite} />\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Statistic title=\"Total Tics Income\" value={item.total_tics_income + '£'} />\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Statistic title=\"Game Day\" value={moment(item.game_date).format('ll')} />\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Statistic title=\"Total Income\" value={item.total_income_tics_merch_other + '£'} />\r\n                </Col>\r\n              </Row>\r\n            </Card.Grid>\r\n              : this.empty())\r\n          }\r\n        </Card>\r\n        <Pagination current={this.state.current} total={total} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownnProps) => ({\r\n  rdx_menuData: state.tabpanes.menuData,\r\n  rdx_activeKey: state.tabpanes.activeKey\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  addTabList: bindActionCreators(tabpanes.addTabList, dispatch),\r\n  cachePanes: bindActionCreators(tabpanes.cachePanes, dispatch)\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StatementMain)","import React, { Component } from 'react'\r\nimport Echarts from '../../../components/charts/Echarts'\r\n\r\nconst legend1 = [\r\n    {\r\n        name: 'Bundle',\r\n        value: (data) => {\r\n            try {\r\n                return JSON.parse(data['lr_promotions']).Bundle.sum\r\n            } catch (e) {\r\n                return 0\r\n            }\r\n\r\n        }\r\n    },\r\n    {\r\n        name: 'EB \"Full Price\"',\r\n        value: (data) => data.total_tics_income - (JSON.parse(data['lr_promotions']).total.sum)\r\n    },\r\n    {\r\n        name: 'EB Promos',\r\n        value: (data) => JSON.parse(data['lr_promotions']).total.sum\r\n    },\r\n    {\r\n        name: 'LBL card tics',\r\n        value: (data) => data.income_lbl_card_tics\r\n    },\r\n    {\r\n        name: 'Other tics',\r\n        value: (data) => data.income_other_tics\r\n    },\r\n    {\r\n        name: 'Groups',\r\n        value: (data) => data.income_groups_tickets\r\n    },\r\n    {\r\n        name: 'Total Merch/Food/Extras',\r\n        value: (data) => data.income_merch_other_none_group_packages\r\n    }\r\n]\r\nconst legend2 = [\r\n    {\r\n        name: 'Season Tics/Comps',\r\n        value: (data) => data.season_tics_comps\r\n    },\r\n    {\r\n        name: 'Bundle',\r\n        value: (data) => JSON.parse(data['lr_promotions']).Bundle.count\r\n    },\r\n    {\r\n        name: '\"Full\" Price',\r\n        value: (data) => data.tickers_sold - JSON.parse(data['lr_promotions']).total.count\r\n    },\r\n    {\r\n        name: 'Promos',\r\n        value: (data) => JSON.parse(data['lr_promotions']).total.count\r\n    },\r\n    {\r\n        name: 'Groups Total',\r\n        value: (data) => data.total_adults_groups + data.tot_child_groups\r\n    },\r\n    {\r\n        name: 'Total Scanned',\r\n        value: (data) => data.tickets_scanned\r\n    }\r\n]\r\nexport default class Sell_ticket extends Component {\r\n    mapper1 = (statData) => {\r\n        let data = statData.result[0] || this.props.data\r\n        return {\r\n            title: {},\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left',\r\n                data: legend1.map(item => item.name)\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'Promotions Statistics',\r\n                    type: 'pie',\r\n                    radius: '70%',\r\n                    center: ['50%', '60%'],\r\n                    data: legend1.map(item => {\r\n                        return {\r\n                            name: item.name,\r\n                            value: item.value(data)\r\n                        }\r\n                    }),\r\n                    itemStyle: {\r\n                        emphasis: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n    }\r\n    mapper2 = (statData) => {\r\n        let data = statData.result[0] || this.props.data\r\n        console.log(data)\r\n        return {\r\n            title: {},\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left',\r\n                data: legend2.map(item => item.name)\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'TicketType Statistics',\r\n                    type: 'pie',\r\n                    radius: '70%',\r\n                    center: ['50%', '60%'],\r\n                    data: legend2.map(item => {\r\n                        return {\r\n                            name: item.name,\r\n                            value: item.value(data)\r\n                        }\r\n                    }),\r\n                    itemStyle: {\r\n                        emphasis: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='ChartView'>\r\n                <div className='flex-row'>\r\n                    <Echarts {...chartStyle} type='Sell_ticket' mapper={this.mapper1} />\r\n                    <Echarts {...chartStyle} type='Sell_ticket' mapper={this.mapper2} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst chartStyle = {\r\n    width: 700,\r\n    height: 400\r\n}","import React, { Component } from 'react'\r\nimport Echarts from '../../../components/charts/Echarts'\r\nimport API from '../../../api/service'\r\nimport { store } from '../../../redux/store'\r\n\r\nconst { getState } = store\r\n\r\nexport default class Income_ticket extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            ticket_type: [],\r\n            price_tier: []\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        // 获取数据\r\n        // 去store中取对应的数组\r\n        const batchs = getState().charts['Income_ticket'].length ? getState().charts['Income_ticket'] : this.props.batchs\r\n        API.getSingleField({\r\n            statTable: 'Income_ticket',\r\n            batch: batchs[0]\r\n        }).then(res => {\r\n            if (res.data.success) {\r\n                const { ticket_type, price_tier } = res.data.data\r\n                this.setState({ ticket_type, price_tier })\r\n            }\r\n        })\r\n    }\r\n    mapper = (statData) => {\r\n        const { ticket_type, price_tier } = this.state\r\n        return {\r\n            tooltip: {\r\n                trigger: 'item',\r\n                // formatter: \"{a} <br/>{b}: {c} ({d}%)\"\r\n                formatter: (arg1) => {\r\n                    return `${arg1.seriesName} <br/>${arg1.name}: ${arg1.value} (${arg1.percent}%) <br/>£${arg1.data.income}`\r\n                }\r\n            },\r\n            legend: {\r\n                orient: 'horizontal',\r\n                x: 'left',\r\n                data: ticket_type.map(item => item.ticket_type).concat(['']).concat(price_tier.map(item => item.price_tier))\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'Price Tier',\r\n                    type: 'pie',\r\n                    selectedMode: 'single',\r\n                    radius: [0, '30%'],\r\n                    center: ['50%', '50%'],\r\n                    label: {\r\n                        normal: {\r\n                            position: 'inner'\r\n                        }\r\n                    },\r\n                    labelLine: {\r\n                        normal: {\r\n                            show: false\r\n                        }\r\n                    },\r\n                    data: price_tier.map(item => {\r\n                        return {\r\n                            name: item.price_tier,\r\n                            value: item.cnt,\r\n                            income: item.sum\r\n                        }\r\n                    })\r\n                },\r\n                {\r\n                    name: 'Ticket Type',\r\n                    type: 'pie',\r\n                    radius: ['40%', '55%'],\r\n                    center: ['50%', '50%'],\r\n                    // label: {\r\n                    //     normal: {\r\n                    //         formatter: '{a|{a}}{abg|}\\n{hr|}\\n  {b|{b}：}{c}  {per|{d}%}  ',\r\n                    //         backgroundColor: '#eee',\r\n                    //         borderColor: '#aaa',\r\n                    //         borderWidth: 1,\r\n                    //         borderRadius: 4,\r\n                    //         rich: {\r\n                    //             a: {\r\n                    //                 color: '#999',\r\n                    //                 lineHeight: 22,\r\n                    //                 align: 'center'\r\n                    //             },\r\n                    //             hr: {\r\n                    //                 borderColor: '#aaa',\r\n                    //                 width: '100%',\r\n                    //                 borderWidth: 0.5,\r\n                    //                 height: 0\r\n                    //             },\r\n                    //             b: {\r\n                    //                 fontSize: 16,\r\n                    //                 lineHeight: 33\r\n                    //             },\r\n                    //             per: {\r\n                    //                 color: '#eee',\r\n                    //                 backgroundColor: '#334455',\r\n                    //                 padding: [2, 4],\r\n                    //                 borderRadius: 2\r\n                    //             }\r\n                    //         }\r\n                    //     }\r\n                    // },\r\n                    data: ticket_type.map(item => {\r\n                        return {\r\n                            name: item.ticket_type,\r\n                            value: item.cnt,\r\n                            income: item.sum\r\n                        }\r\n                    })\r\n                },\r\n            ]\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='ChartView'>\r\n                {\r\n                    this.state.ticket_type.length > 0 && this.state.price_tier.length > 0 ?\r\n                        <Echarts type='Income_ticket' mapper={this.mapper} />\r\n                        : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Descriptions, Tooltip, Switch, Select, Icon } from 'antd'\r\nimport API from '../../../api/service'\r\nimport './StatisticsDetail.css'\r\n\r\n// 单场统计图\r\nimport SellTicket from '../../Charts/pages/Sell_ticket'\r\nimport IncomeTicker from '../../Charts/pages/Income_ticket'\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\nconst bgType = [\r\n  'rgb(208,206,206)', //原始数据\r\n  'rgb(0,176,240)', //统计数据\r\n  'rgb(146,208,80)', //公式数据\r\n  '#', //增长\r\n  '#', //下降\r\n]\r\n\r\nexport default class StatisticsDetail extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      statData: {},\r\n      DetailGroup: {},\r\n      describe: {},\r\n      allOfBatchs: [],\r\n      isComparison: false, //控制开启对比功能\r\n      comparStatData: {},\r\n      comparBatch: ''\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    // 请求详情接口获取数据\r\n    this.getDetail()\r\n    this.getComparList()\r\n  }\r\n  getDetail = () => {\r\n    const { batch } = this.props.match.params\r\n    API.searchDetail({ batch }).then(res => {\r\n      if (res.data.success) {\r\n        const { detail, describe, DetailGroup } = res.data.data\r\n        this.setState({ statData: detail, describe, DetailGroup })\r\n      }\r\n    })\r\n  }\r\n  getComparDetail = () => {\r\n    const batch = this.state.comparBatch\r\n    if (batch) {\r\n      API.searchDetail({ batch }).then(res => {\r\n        if (res.data.success) {\r\n          this.setState({ comparStatData: res.data.data })\r\n        }\r\n      })\r\n    }\r\n  }\r\n  // 获取比较list\r\n  getComparList() {\r\n    API.getAllOfBatchs().then(res => {\r\n      if (res.data.success) {\r\n        this.setState({\r\n          allOfBatchs: res.data.data\r\n        })\r\n      }\r\n    })\r\n  }\r\n  onSwitchChange = () => {\r\n    this.setState({\r\n      isComparison: !this.state.isComparison\r\n    })\r\n  }\r\n  handleSelectChange = (value) => {\r\n    this.setState({ comparBatch: value }, () => {\r\n      // 获取对比数据\r\n      this.getComparDetail()\r\n    })\r\n  }\r\n  render() {\r\n    const { statData, comparStatData, DetailGroup, describe, isComparison, comparBatch } = this.state\r\n    return (\r\n      <div className='shadow-card' style={{ margin: '25px' }}>\r\n        <div className='flex-row justify-between'>\r\n          <h2>Single field statistics</h2>\r\n          {/* 开启对比？ */}\r\n          <div>\r\n            <div className='flex-row align-center'>\r\n              <h3>Comparison?&nbsp;&nbsp;</h3><Switch checked={isComparison} onChange={this.onSwitchChange} />\r\n              <Select style={{ width: 300 }} onChange={this.handleSelectChange} value={comparBatch}>\r\n                {\r\n                  // 去掉自己的batch\r\n                  this.state.allOfBatchs.filter(item => item.batch !== this.props.match.params.batch).map(item => <Option key={item.batch}>\r\n                    {/* 左边对阵。右边日期 */}\r\n                    <div className='flex-row justify-between'>\r\n                      <span>{item.opposition}</span>\r\n                      <span>{moment(item.game_date).format('ll')}</span>\r\n                    </div>\r\n                  </Option>)\r\n                }\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {\r\n          Object.entries(DetailGroup).map(([key, value]) => {\r\n            return <Descriptions title={value.label} bordered column={4} >\r\n              {\r\n                Object.entries(statData).filter(([K, V]) => describe[K].group === key).map(([K, V]) => {\r\n                  return <Descriptions.Item style={{ padding: 0 }} label={<Tooltip title={describe[K].label} className='shiyishi'>\r\n                    <div style={{ width: '120px', overflow: 'hidden', textAlign: 'end', whiteSpace: 'nowrap', textOverflow: 'ellipsis' }}>{describe[K].label}</div>\r\n                  </Tooltip>}>{\r\n                      <Tooltip title={V}>\r\n                        <div className='bg-item' style={{ backgroundColor: bgType[describe[K].type] }}>\r\n                          <span>{describe[K].prefix}</span>{describe[K].suffix === '%' ? V * 100 : V}<span>{describe[K].suffix}</span>\r\n                          {/* 以下是对比数据 */}\r\n                          {\r\n                            // 添加动画类\r\n                            this.state.isComparison && comparStatData.detail ? <div className={`comparStatData ${this.state.isComparison ? 'onRight' : ''}`}>\r\n                              <span>{describe[K].prefix}</span>{describe[K].suffix === '%' ? comparStatData.detail[K] * 100 : comparStatData.detail[K]}<span>{describe[K].suffix}</span>\r\n                            </div>\r\n                              : null\r\n                          }\r\n                          {/* 在加一个增长比 */}\r\n                          {\r\n                            this.state.isComparison && comparStatData.detail && String(comparStatData.detail[K]).match(/^[\\d\\.]+$/g) ? <div className={`comparStatData ${this.state.isComparison ? 'onLeft' : ''}`}>\r\n                              <div className='flex-row justify-center' style={{ color: V - comparStatData.detail[K] > 0 ? 'red' : 'green' }}>\r\n                                {/* icon */}\r\n                                {V - comparStatData.detail[K] > 0 ? <Icon style={{ lineHeight: 'inherit' }} type=\"rise\" /> : <Icon type=\"fall\" style={{ lineHeight: 'inherit' }} />}\r\n                                <span>{describe[K].prefix}</span>{(describe[K].suffix === '%' ? (V - comparStatData.detail[K]) * 100 : V - comparStatData.detail[K]).toFixed(2)}<span>{describe[K].suffix}</span>\r\n                              </div>\r\n                            </div>\r\n                              : null\r\n                          }\r\n                        </div>\r\n                      </Tooltip>\r\n                    }</Descriptions.Item>\r\n                })\r\n              }\r\n            </Descriptions>\r\n          })\r\n        }\r\n        <h2>Income Pie</h2>\r\n        {\r\n          Object.keys(statData).length ? <SellTicket data={statData} /> : null\r\n        }\r\n        <h2>Income Type/Tire</h2>\r\n        <IncomeTicker batchs={[this.props.match.params.batch]} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport API from '../../../api/service'\r\nimport echarts from 'echarts'\r\n\r\nexport default class TestLine extends Component {\r\n  componentDidMount() {\r\n    API.getTestLineS().then(res => {\r\n      option.legend.data = res.data.yAxis\r\n      option.yAxis.data = res.data.legend\r\n      Object.entries(res.data.yArr).forEach((item, index) => {\r\n        option.series[index] = {\r\n          name: item[0],\r\n          type: 'bar',\r\n          stack: 'total',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight'\r\n            }\r\n          },\r\n          data: item[1]\r\n        }\r\n      })\r\n      var dom = document.getElementById(\"container1\");\r\n      let myChart = echarts.init(dom);\r\n      myChart.setOption(option, true);\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id='container1' style={{ height: '800px', width: '1200px' }}></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nlet option = {\r\n  tooltip: {\r\n    trigger: 'axis',\r\n    axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n      type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n    }\r\n  },\r\n  legend: {\r\n    data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\r\n  },\r\n  grid: {\r\n    left: '3%',\r\n    right: '4%',\r\n    bottom: '3%',\r\n    containLabel: true\r\n  },\r\n  xAxis: {\r\n    type: 'value'\r\n  },\r\n  yAxis: {\r\n    type: 'category',\r\n    data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n  },\r\n  series: [\r\n    {\r\n      name: '直接访问',\r\n      type: 'bar',\r\n      stack: '总量',\r\n      label: {\r\n        normal: {\r\n          show: true,\r\n          position: 'insideRight'\r\n        }\r\n      },\r\n      data: [320, 302, 301, 334, 390, 330, 320]\r\n    },\r\n    {\r\n      name: '邮件营销',\r\n      type: 'bar',\r\n      stack: '总量',\r\n      label: {\r\n        normal: {\r\n          show: true,\r\n          position: 'insideRight'\r\n        }\r\n      },\r\n      data: [120, 132, 101, 134, 90, 230, 210]\r\n    },\r\n    {\r\n      name: '联盟广告',\r\n      type: 'bar',\r\n      stack: '总量',\r\n      label: {\r\n        normal: {\r\n          show: true,\r\n          position: 'insideRight'\r\n        }\r\n      },\r\n      data: [220, 182, 191, 234, 290, 330, 310]\r\n    },\r\n    {\r\n      name: '视频广告',\r\n      type: 'bar',\r\n      stack: '总量',\r\n      label: {\r\n        normal: {\r\n          show: true,\r\n          position: 'insideRight'\r\n        }\r\n      },\r\n      data: [150, 212, 201, 154, 190, 330, 410]\r\n    },\r\n    {\r\n      name: '搜索引擎',\r\n      type: 'bar',\r\n      stack: '总量',\r\n      label: {\r\n        normal: {\r\n          show: true,\r\n          position: 'insideRight'\r\n        }\r\n      },\r\n      data: [820, 832, 901, 934, 1290, 1330, 1320]\r\n    }\r\n  ]\r\n};","import React, { Component } from 'react'\r\nimport API from '../../api/service'\r\nimport { Card, Select, Row, Col, Statistic, Empty, message } from 'antd';\r\nimport * as tabpanes from '../../redux/actions/tabpanes'\r\nimport * as charts from '../../redux/actions/charts'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport './ChartsMain.css'\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select;\r\nconst gridStyle = {\r\n  height: '250px',\r\n  width: '25%',\r\n  textAlign: 'center',\r\n};\r\nclass ChartsMain extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      batchs: [],\r\n      allOfBatchs: [] //批次数组\r\n    }\r\n  }\r\n  onClick = ({ name, path }) => {\r\n    // 把这些batch号存到name名下的数组中\r\n    this.props.set_batch(name, this.state.batchs)\r\n\r\n    // 先缓存操作前的panes数组\r\n    this.props.cachePanes()\r\n    // panes进行增减操作\r\n    this.props.addTabList({\r\n      key: path,\r\n      title: name,\r\n      closable: true\r\n    })\r\n  }\r\n  datasetClick = ({ name, path }) => {\r\n    this.props.set_batch(name, this.state.batchs.length ? this.state.batchs : this.state.allOfBatchs.map(item => item.batch))\r\n\r\n    // 先缓存操作前的panes数组\r\n    this.props.cachePanes()\r\n    // panes进行增减操作\r\n    this.props.addTabList({\r\n      key: path,\r\n      title: name,\r\n      closable: true\r\n    })\r\n  }\r\n  singleClick = (params) => {\r\n    // batch只能选一个提示，退出\r\n    if (this.state.batchs.length !== 1) {\r\n      message.warn('Please select only one match.')\r\n      return\r\n    }\r\n    this.onClick(params)\r\n  }\r\n  multipleClick = (params) => {\r\n    // 如果是没有batch条件提示，退出\r\n    if (this.state.batchs.length === 0) {\r\n      message.warn('Please select only one match.')\r\n      return\r\n    }\r\n    this.onClick(params)\r\n  }\r\n  componentWillMount() {\r\n    this.getAllOfBatchs()\r\n  }\r\n  getAllOfBatchs = () => {\r\n    API.getAllOfBatchs().then(res => {\r\n      if (res.data.success) {\r\n        this.setState({\r\n          allOfBatchs: res.data.data\r\n        })\r\n      }\r\n    })\r\n  }\r\n  handleChange = (value) => {\r\n    this.setState({ batchs: value })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='ChartsMain'>\r\n        {/* 选择数据 */}\r\n        <div className='shadow-card'>\r\n          Choose a batch\r\n            <Select\r\n            mode=\"multiple\"\r\n            style={{ width: '100%' }}\r\n            placeholder=\"Please select\"\r\n            defaultValue={[]}\r\n            onChange={this.handleChange}\r\n          >\r\n            {\r\n              this.state.allOfBatchs.map(item => <Option key={item.batch}>\r\n                {/* 左边对阵。右边日期 */}\r\n                <div className='flex-row justify-between'>\r\n                  <span>{item.opposition}</span>\r\n                  <span>{moment(item.game_date).format('ll')}</span>\r\n                </div>\r\n              </Option>)\r\n            }\r\n          </Select>\r\n        </div>\r\n        {/* 卡片展示 */}\r\n        <div className='StatementMain shadow-card' style={{ marginTop: '50px' }}>\r\n          <Card title=\"Dash-Charts\" >\r\n            <Card.Grid onClick={() => this.multipleClick({ name: 'Dash_Financials', path: `/Dash-Financials` })} style={gridStyle}>\r\n              <img src=\"./images/linetest.png\" alt=\"\" />\r\n              <h3>Dash_Financials</h3>\r\n            </Card.Grid>\r\n            <Card.Grid onClick={() => this.multipleClick({ name: 'Dash_Attendance', path: `/Dash-Attendance` })} style={gridStyle}>\r\n              <img src=\"./images/linetest.png\" alt=\"\" />\r\n              <h3>Dash_Attendance</h3>\r\n            </Card.Grid>\r\n            <Card.Grid onClick={() => this.multipleClick({ name: 'Dash_TicketTypes', path: `/Dash-TicketTypes` })} style={gridStyle}>\r\n              <img src=\"./images/compound.jpg\" alt=\"\" />\r\n              <h3>Dash_TicketTypes</h3>\r\n            </Card.Grid>\r\n            <Card.Grid onClick={() => this.multipleClick({ name: 'Dash_PricingTiers', path: `/Dash-PricingTiers` })} style={gridStyle}>\r\n              <img src=\"./images/compound.jpg\" alt=\"\" />\r\n              <h3>Dash_PricingTiers</h3>\r\n            </Card.Grid>\r\n          </Card>\r\n          <Card title=\"Single field\" className='StatementMain'>\r\n            <Card.Grid onClick={() => this.singleClick({ name: 'Sell_ticket', path: `/cust-selticket` })} style={gridStyle}>\r\n              <img src=\"./images/pietest.jpg\" alt=\"\" />\r\n              <h3>Sell_ticket</h3>\r\n            </Card.Grid>\r\n            <Card.Grid onClick={() => this.singleClick({ name: 'Income_ticket', path: `/cust-incticket` })} style={gridStyle}>\r\n              <img src=\"./images/nestPie.jpg\" alt=\"\" />\r\n              <h3>Income_ticket</h3>\r\n            </Card.Grid>\r\n            <Card.Grid onClick={() => this.datasetClick({ name: 'Income_ticket_dataset', path: `/cust-incticketDS` })} style={gridStyle}>\r\n              <img src=\"./images/sharedataset.jpg\" alt=\"\" />\r\n              <h3>Income_ticket_dataset</h3>\r\n            </Card.Grid>\r\n          </Card>\r\n          {/* <Card title=\"DataSet\" className='StatementMain'>\r\n            <Card.Grid onClick={() => this.datasetClick({ name: 'Income_Cartesian', path: `/cust-incCartesian` })} style={gridStyle}>\r\n              <img src=\"./images/heatmap-cartesian.jpg\" alt=\"\" />\r\n              <h3>Income_Cartesian</h3>\r\n            </Card.Grid>\r\n          </Card> */}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownnProps) => ({\r\n  rdx_menuData: state.tabpanes.menuData,\r\n  rdx_activeKey: state.tabpanes.activeKey\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  addTabList: bindActionCreators(tabpanes.addTabList, dispatch),\r\n  cachePanes: bindActionCreators(tabpanes.cachePanes, dispatch),\r\n  set_batch: bindActionCreators(charts.set_batch, dispatch)\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartsMain)\r\n","import React, { Component } from 'react'\r\nimport Echarts from '../../../components/charts/Echarts'\r\n\r\nconst legend = [\r\n  {\r\n    name: 'Bundle',\r\n    value: (data) => JSON.parse(data['lr_promotions']).Bundle.sum\r\n  },\r\n  {\r\n    name: 'EB \"Full Price\"',\r\n    value: (data) => data.total_tics_income - (JSON.parse(data['lr_promotions']).total.sum)\r\n  },\r\n  {\r\n    name: 'EB Promos',\r\n    value: (data) => JSON.parse(data['lr_promotions']).total.sum\r\n  },\r\n  {\r\n    name: 'LBL card tics',\r\n    value: (data) => data.income_lbl_card_tics\r\n  },\r\n  {\r\n    name: 'Other tics',\r\n    value: (data) => data.income_other_tics\r\n  },\r\n  {\r\n    name: 'Groups',\r\n    value: (data) => data.income_groups_tickets\r\n  },\r\n  {\r\n    name: 'Total Merch/Food/Extras',\r\n    value: (data) => data.income_merch_other_none_group_packages\r\n  }\r\n]\r\n\r\nexport default class Dash_Financials extends Component {\r\n  mapper(statData) {\r\n    return  {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend.map(item=>item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: statData.oppositions\r\n      },\r\n      series: legend.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside'\r\n            }\r\n          },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='ChartView'>\r\n        <Echarts type='Dash_Financials' mapper={this.mapper}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Echarts from '../../../components/charts/Echarts'\r\n\r\nconst legend = [\r\n  {\r\n    name: 'Season Tics/Comps',\r\n    value: (data) => data.season_tics_comps\r\n  },\r\n  {\r\n    name: 'Bundle',\r\n    value: (data) => JSON.parse(data['lr_promotions']).Bundle.count\r\n  },\r\n  {\r\n    name: '\"Full\" Price',\r\n    value: (data) => data.tickers_sold - JSON.parse(data['lr_promotions']).total.count\r\n  },\r\n  {\r\n    name: 'Promos',\r\n    value: (data) => JSON.parse(data['lr_promotions']).total.count\r\n  },\r\n  {\r\n    name: 'Groups Total',\r\n    value: (data) => data.total_adults_groups + data.tot_child_groups\r\n  },\r\n  {\r\n    name: 'Total Scanned',\r\n    value: (data) => data.tickets_scanned\r\n  }\r\n]\r\n\r\nexport default class Dash_Attendance extends Component {\r\n  mapper(statData) {\r\n    return  {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: statData.oppositions\r\n      },\r\n      series: legend.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside'\r\n            }\r\n          },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='ChartView'>\r\n        <Echarts type='Dash_Attendance' mapper={this.mapper}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Echarts from '../../../components/charts/Echarts'\r\n\r\n// 票统计\r\nconst legend1 = [\r\n  {\r\n    name: 'Adults',\r\n    value: (data) => data.total_adults\r\n  },\r\n  {\r\n    name: 'Concessions',\r\n    value: (data) => data.total_concessions\r\n  },\r\n  {\r\n    name: 'Children',\r\n    value: (data) => data.total_children\r\n  },\r\n  {\r\n    name: 'Family1',\r\n    value: (data) => data.total_family1\r\n  },\r\n  {\r\n    name: 'Family2',\r\n    value: (data) => data.total_family2\r\n  }\r\n]\r\n// 票比例\r\nconst legend2 = [\r\n  {\r\n    name: 'Adults',\r\n    value: (data) => data.inc_audults\r\n  },\r\n  {\r\n    name: 'Concessions',\r\n    value: (data) => data.inc_concessions\r\n  },\r\n  {\r\n    name: 'Children',\r\n    value: (data) => data.inc_children\r\n  },\r\n  {\r\n    name: 'Family1',\r\n    value: (data) => data.inc_family1\r\n  },\r\n  {\r\n    name: 'Family2',\r\n    value: (data) => data.inc_family2\r\n  }\r\n]\r\n// 票收入统计\r\nconst legend3 = [\r\n  {\r\n    name: '% Adults',\r\n    value: (data) => (data.total_adults / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Concessions',\r\n    value: (data) => (data.total_concessions / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Children',\r\n    value: (data) => (data.total_children / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Family1',\r\n    value: (data) => (data.total_family1 / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Family2',\r\n    value: (data) => (data.total_family2 / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  }\r\n]\r\n// 票收入比例\r\nconst legend4 = [\r\n  {\r\n    name: '% Adults',\r\n    value: (data) => (data.inc_audults / (data.inc_audults + data.inc_concessions + data.inc_children + data.inc_family1 + data.inc_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Concessions',\r\n    value: (data) => (data.inc_concessions / (data.inc_audults + data.inc_concessions + data.inc_children + data.inc_family1 + data.inc_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Children',\r\n    value: (data) => (data.inc_children / (data.inc_audults + data.inc_concessions + data.inc_children + data.inc_family1 + data.inc_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Family1',\r\n    value: (data) => (data.inc_family1 / (data.inc_audults + data.inc_concessions + data.inc_children + data.inc_family1 + data.inc_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Family2',\r\n    value: (data) => (data.inc_family2 / (data.inc_audults + data.inc_concessions + data.inc_children + data.inc_family1 + data.inc_family2)).toFixed(2)\r\n  }\r\n]\r\n\r\nexport default class Dash_TicketTypes extends Component {\r\n  mapper1(statData) {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend1.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: statData.oppositions\r\n      },\r\n      series: legend1.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside'\r\n            }\r\n          },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n  mapper2(statData) {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend2.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: statData.oppositions\r\n      },\r\n      series: legend2.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside'\r\n            }\r\n          },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n  mapper3(statData) {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          label: {\r\n            backgroundColor: '#6a7985'\r\n          }\r\n        }\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          saveAsImage: {}\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend3.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: statData.oppositions\r\n      },\r\n      series: legend3.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'line',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'top'\r\n            }\r\n          },\r\n          areaStyle: { normal: {} },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n  mapper4(statData) {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          label: {\r\n            backgroundColor: '#6a7985'\r\n          }\r\n        }\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          saveAsImage: {}\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend4.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: statData.oppositions\r\n      },\r\n      series: legend4.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'line',\r\n          stack: '总量',\r\n          areaStyle: {},\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside'\r\n            }\r\n          },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='ChartView'>\r\n        <div className='flex-row justify-around'>\r\n          <Echarts {...chartStyle} type='Dash_TicketTypes' mapper={this.mapper1} />\r\n          <Echarts {...chartStyle} type='Dash_TicketTypes' mapper={this.mapper2} />\r\n        </div>\r\n        <div className='flex-row justify-around'>\r\n          <Echarts {...chartStyle} type='Dash_TicketTypes' mapper={this.mapper3} />\r\n          <Echarts {...chartStyle} type='Dash_TicketTypes' mapper={this.mapper4} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst chartStyle = {\r\n  width: 700,\r\n  height: 400\r\n}\r\n","import React, { Component } from 'react'\r\nimport Echarts from '../../../components/charts/Echarts'\r\n\r\n// 票统计\r\nconst legend1 = [\r\n  {\r\n    name: 'Early Bird',\r\n    value: (data) => data.early_bird_tics\r\n  },\r\n  {\r\n    name: 'Advance',\r\n    value: (data) => data.advance_tics\r\n  },\r\n  {\r\n    name: 'Gameday',\r\n    value: (data) => data.gameday_tics\r\n  },\r\n  {\r\n    name: 'Other',\r\n    value: (data) => data.other_tics\r\n  }\r\n]\r\n// 票比例\r\nconst legend2 = [\r\n  {\r\n    name: 'Early Bird',\r\n    value: (data) => data.inc_early_bird\r\n  },\r\n  {\r\n    name: 'Advance',\r\n    value: (data) => data.inc_advance\r\n  },\r\n  {\r\n    name: 'Gameday',\r\n    value: (data) => data.inc_gameday\r\n  },\r\n  {\r\n    name: 'Other',\r\n    value: (data) => data.inc_other\r\n  }\r\n]\r\n// 票收入统计\r\nconst legend3 = [\r\n  {\r\n    name: '% Early Bird',\r\n    value: (data) => (data.early_bird_tics/(data.early_bird_tics+data.advance_tics+data.gameday_tics)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Advance',\r\n    value: (data) => (data.advance_tics/(data.early_bird_tics+data.advance_tics+data.gameday_tics)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Gameday',\r\n    value: (data) => (data.gameday_tics/(data.early_bird_tics+data.advance_tics+data.gameday_tics)).toFixed(2)\r\n  }\r\n]\r\n// 票收入比例\r\nconst legend4 = [\r\n  {\r\n    name: '% Early Bird',\r\n    value: (data) => (data.inc_early_bird/(data.inc_early_bird+data.inc_advance+data.inc_gameday)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Advance',\r\n    value: (data) =>  (data.inc_advance/(data.inc_early_bird+data.inc_advance+data.inc_gameday)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Gameday',\r\n    value: (data) =>  (data.inc_gameday/(data.inc_early_bird+data.inc_advance+data.inc_gameday)).toFixed(2)\r\n  }\r\n]\r\n\r\nexport default class Dash_PricingTiers extends Component {\r\n  mapper1(statData) {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend1.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: statData.oppositions\r\n      },\r\n      series: legend1.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside'\r\n            }\r\n          },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n  mapper2(statData) {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend2.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: statData.oppositions\r\n      },\r\n      series: legend2.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside'\r\n            }\r\n          },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n  mapper3(statData) {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          label: {\r\n            backgroundColor: '#6a7985'\r\n          }\r\n        }\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          saveAsImage: {}\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend3.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: statData.oppositions\r\n      },\r\n      series: legend3.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'line',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'top'\r\n            }\r\n          },\r\n          areaStyle: { normal: {} },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n  mapper4(statData) {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          label: {\r\n            backgroundColor: '#6a7985'\r\n          }\r\n        }\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          saveAsImage: {}\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend4.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: statData.oppositions\r\n      },\r\n      series: legend4.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'line',\r\n          stack: '总量',\r\n          areaStyle: {},\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside'\r\n            }\r\n          },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='ChartView'>\r\n        <div className='flex-row justify-around'>\r\n          <Echarts {...chartStyle} type='Dash_PricingTiers' mapper={this.mapper1} />\r\n          <Echarts {...chartStyle} type='Dash_PricingTiers' mapper={this.mapper2} />\r\n        </div>\r\n        <div className='flex-row justify-around'>\r\n          <Echarts {...chartStyle} type='Dash_PricingTiers' mapper={this.mapper3} />\r\n          <Echarts {...chartStyle} type='Dash_PricingTiers' mapper={this.mapper4} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst chartStyle = {\r\n  width: 700,\r\n  height: 400\r\n}\r\n","import React from 'react';\r\nimport MainView from '../views/MainView';\r\nimport HomePage from '../views/HomePage/HomePage';\r\nimport DataInput from '../views/DataInput/DataInput';\r\nimport TestQuery from '../views/Query/testQuery/TestQuery';\r\nimport StatisticsMain from '../views/Statistics/StatementMain';\r\nimport StatisticsDetail from '../views/Statistics/Detail/StatisticsDetail';\r\nimport TestLine from '../views/Statistics/testLine/TestLine';\r\nimport ChartsMain from '../views/Charts/ChartsMain';\r\nimport { store } from '../redux/store';\r\nimport { KeepAlive } from 'react-keep-alive';\r\n// 图表\r\nimport DashFinancials from '../views/Charts/pages/Dash_Financials';\r\nimport DashAttendance from '../views/Charts/pages/Dash_Attendance';\r\nimport DashTicketTypes from '../views/Charts/pages/Dash_TicketTypes';\r\nimport DashPricingTiers from '../views/Charts/pages/Dash_PricingTiers';\r\nimport Sellticket from '../views/Charts/pages/Sell_ticket';\r\nimport Incometicket from '../views/Charts/pages/Income_ticket';\r\nimport Incometicketdataset from '../views/Charts/pages/Income_ticket_dataset';\r\nimport IncomeCartesian from '../views/Charts/pages/Income_Cartesian';\r\nconsole.log('sss',DashFinancials)\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    component: MainView,\r\n    routes: [\r\n      {\r\n        path: '/homepage',\r\n        component: HomePage\r\n      },\r\n      {\r\n        path: '/query',\r\n        component: TestQuery\r\n      },\r\n      {\r\n        path: '/input',\r\n        component: DataInput,\r\n        render: props => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive = !store\r\n            .getState()\r\n            .tabpanes.lastPanes.some(\r\n              item => item.key === props.location.pathname\r\n            );\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <DataInput />\r\n            </KeepAlive>\r\n          );\r\n        }\r\n      },\r\n      // 统计\r\n      {\r\n        path: '/statement',\r\n        exact: true,\r\n        component: StatisticsMain\r\n      },\r\n      {\r\n        path: '/statement/stat-detail/:batch',\r\n        component: StatisticsDetail\r\n      },\r\n      {\r\n        path: '/statement/testline',\r\n        unmount: true,\r\n        component: TestLine\r\n      },\r\n      // 图表\r\n      {\r\n        path: '/charts',\r\n        exact: true,\r\n        component: ChartsMain\r\n      },\r\n      {\r\n        path: '/Dash-Financials',\r\n        exact: true,\r\n        render: (props) => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive =!store.getState().tabpanes.lastPanes.some(item => item.key === props.location.pathname)\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <DashFinancials />\r\n            </KeepAlive>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        path: '/Dash-Attendance',\r\n        exact: true,\r\n        render: props => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive = !store\r\n            .getState()\r\n            .tabpanes.lastPanes.some(\r\n              item => item.key === props.location.pathname\r\n            );\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <DashAttendance />\r\n            </KeepAlive>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        path: '/Dash-TicketTypes',\r\n        exact: true,\r\n        render: props => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive = !store\r\n            .getState()\r\n            .tabpanes.lastPanes.some(\r\n              item => item.key === props.location.pathname\r\n            );\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <DashTicketTypes />\r\n            </KeepAlive>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        path: '/Dash-PricingTiers',\r\n        exact: true,\r\n        render: props => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive = !store\r\n            .getState()\r\n            .tabpanes.lastPanes.some(\r\n              item => item.key === props.location.pathname\r\n            );\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <DashPricingTiers />\r\n            </KeepAlive>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        path: '/cust-selticket',\r\n        exact: true,\r\n        render: props => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive = !store\r\n            .getState()\r\n            .tabpanes.lastPanes.some(\r\n              item => item.key === props.location.pathname\r\n            );\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <Sellticket />\r\n            </KeepAlive>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        path: '/cust-incticket',\r\n        exact: true,\r\n        render: props => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive = !store\r\n            .getState()\r\n            .tabpanes.lastPanes.some(\r\n              item => item.key === props.location.pathname\r\n            );\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <Incometicket />\r\n            </KeepAlive>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        path: '/cust-incticketDS',\r\n        exact: true,\r\n        render: props => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive = !store\r\n            .getState()\r\n            .tabpanes.lastPanes.some(\r\n              item => item.key === props.location.pathname\r\n            );\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <Incometicketdataset />\r\n            </KeepAlive>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        path: '/cust-incCartesian',\r\n        exact: true,\r\n        render: props => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive = !store\r\n            .getState()\r\n            .tabpanes.lastPanes.some(\r\n              item => item.key === props.location.pathname\r\n            );\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <IncomeCartesian />\r\n            </KeepAlive>\r\n          );\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","function _interopDefault(ex) {\r\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\r\n}\r\n\r\n// var reactRouter = require('react-router')\r\nvar reactRouter = require('react-router-cache-route');\r\nvar React = _interopDefault(require('react'));\r\n\r\nexport function matchRoutes(\r\n  routes,\r\n  pathname,\r\n  /*not public API*/\r\n  branch\r\n) {\r\n  if (branch === void 0) {\r\n    branch = [];\r\n  }\r\n\r\n  routes.some(function(route) {\r\n    var match = route.path\r\n      ? reactRouter.matchPath(pathname, route)\r\n      : branch.length\r\n      ? branch[branch.length - 1].match // use parent match\r\n      : reactRouter.Router.computeRootMatch(pathname); // use default \"root\" match\r\n\r\n    if (match) {\r\n      branch.push({\r\n        route: route,\r\n        match: match\r\n      });\r\n\r\n      if (route.routes) {\r\n        matchRoutes(route.routes, pathname, branch);\r\n      }\r\n    }\r\n\r\n    return match;\r\n  });\r\n  return branch;\r\n}\r\n\r\nfunction _extends() {\r\n  _extends =\r\n    Object.assign ||\r\n    function(target) {\r\n      for (var i = 1; i < arguments.length; i++) {\r\n        var source = arguments[i];\r\n\r\n        for (var key in source) {\r\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n            target[key] = source[key];\r\n          }\r\n        }\r\n      }\r\n\r\n      return target;\r\n    };\r\n\r\n  return _extends.apply(this, arguments);\r\n}\r\n\r\nexport function renderRoutes(routes, extraProps, switchProps) {\r\n  if (extraProps === void 0) {\r\n    extraProps = {};\r\n  }\r\n\r\n  if (switchProps === void 0) {\r\n    switchProps = {};\r\n  }\r\n\r\n  return routes\r\n    ? React.createElement(\r\n        reactRouter.CacheSwitch,\r\n        switchProps,\r\n        routes.map(function(route, i) {\r\n          return React.createElement(reactRouter.CacheRoute, {\r\n            key: route.key || i,\r\n            path: route.path,\r\n            exact: route.exact,\r\n            strict: route.strict,\r\n            when: route.when,\r\n            cacheKey: route.cacheKey,\r\n            unmount: false,\r\n            behavior: cached =>\r\n              cached ? { style: { display: 'none' } } : undefined,\r\n            render: function render(props) {\r\n              return route.render\r\n                ? route.render(\r\n                    _extends({}, props, extraProps, {\r\n                      route: route\r\n                    })\r\n                  )\r\n                : React.createElement(\r\n                    route.component,\r\n                    _extends({}, props, extraProps, {\r\n                      route: route\r\n                    })\r\n                  );\r\n            }\r\n          });\r\n        })\r\n      )\r\n    : null;\r\n}\r\n\r\n// exports.matchRoutes = matchRoutes\r\n// exports.renderRoutes = renderRoutes\r\n\r\n// export default { matchRoutes, renderRoutes }\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport Routes from './routes';\r\nimport { renderRoutes } from './routes/react-router-config' //为了适应cache组件这个renderRouter稍微改了下\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        {renderRoutes(Routes)}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'antd/dist/antd.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './redux/store';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { Provider as KkpProvider } from 'react-keep-alive';\r\n\r\n// 检查store中的pane数组，如果没有跳转初始页面\r\nconst { getState } = store\r\nconst hash = window.location.hash.replace('#', '')\r\nconst panes = store.getState().tabpanes.panes\r\nif (!panes.some(item => item.key === hash)) {\r\n  window.open('#' + panes[0].key, '_self')\r\n}\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    {/* <PersistGate persistor={persistor}> */}\r\n    <KkpProvider>\r\n      <App />\r\n    </KkpProvider>\r\n    {/* </PersistGate> */}\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","// import * as ActionTypes from '../../actions';\r\n\r\nconst initialState = {};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as ActionTypes from '../../constants/tabpanes';\r\n\r\n// Tab签的默认值\r\nconst initialPanes = [\r\n  {\r\n    title: 'homepage',\r\n    key: '/homepage',\r\n    closable: false\r\n  }\r\n];\r\n\r\nconst initialState = {\r\n  //tab 数组\r\n  panes: initialPanes,\r\n  // 记录各种操作前的panes\r\n  lastPanes: [],\r\n  //tab 活动页key\r\n  activeKey: initialPanes[0].key\r\n};\r\nconsole.log('初始化');\r\nconsole.log(initialState);\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    // 增加一个Tab页\r\n    case ActionTypes.PUSH_TAB_LIST:\r\n      //检查是否有这个key\r\n      if (state.panes.some(item => item.key === action.tabItem.key)) {\r\n        //有\r\n        push(action.tabItem.key);\r\n        return { ...state, activeKey: action.tabItem.key };\r\n      } else {\r\n        //没有\r\n        //推一个tab\r\n        let arr = [...state.panes];\r\n        arr.push(action.tabItem);\r\n        push(action.tabItem.key);\r\n        return { ...state, panes: arr, activeKey: action.tabItem.key };\r\n      }\r\n    // 删除一个Tab页\r\n    case ActionTypes.REMOVE_TAB_LIST:\r\n      let nextPanes = state.panes.filter(item => item.key !== action.key);\r\n      let activeKey = nextPanes[nextPanes.length - 1].key;\r\n      push(activeKey);\r\n      return { ...state, panes: nextPanes, activeKey };\r\n    // 清空Tab页\r\n    case ActionTypes.CLEAR_TAB_LIST:\r\n      //清空,只保留closable false的页签\r\n      return {\r\n        ...state,\r\n        panes: state.panes.filter(item => item.closable === false)\r\n      };\r\n    // 设置active签\r\n    case ActionTypes.SET_ACTIVE:\r\n      push(action.key);\r\n      return { ...state, activeKey: action.key };\r\n    // 监听哈希值\r\n    case ActionTypes.LISTEN_HASH:\r\n      if (state.panes.some(item => item.key === action.hash)) {\r\n        return { ...state, activeKey: action.hash };\r\n      }\r\n      return { ...state };\r\n    case ActionTypes.HEADER_MENU:\r\n      return { ...state, menuData: action.data };\r\n    // 缓存上一次操作的panes状态\r\n    case ActionTypes.CACHE_PANES:\r\n      return { ...state, lastPanes: [...state.panes] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nfunction push(url) {\r\n  window.location.href =\r\n    window.location.origin + window.location.pathname + '#' + url;\r\n}\r\n","import * as ActionTypes from '../../constants/charts';\r\n\r\nconst initialState = {\r\n  // ↓用于存放batch号的，给页面传参用\r\n  Dash_Financials: [],\r\n  Dash_Attendance: [],\r\n  Dash_TicketTypes: [],\r\n  Dash_PricingTiers: [],\r\n  Sell_ticket: [],\r\n  Income_ticket: [],\r\n  Income_ticket_dataset: [],\r\n  Income_Cartesian: []\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    // 存放对应图表batch数据\r\n    case ActionTypes.SAVE_BATCHS:\r\n      return { ...state, [action.set_name]: action.batchs };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport appReducer from './app';\r\nimport tabpanes from './tabpanes';\r\nimport charts from './charts';\r\n\r\nlet rootReducer = combineReducers({\r\n  appReducer,\r\n  tabpanes,\r\n  charts\r\n});\r\n\r\nexport default persistReducer(\r\n  {\r\n    key: 'root',\r\n    storage\r\n  },\r\n  rootReducer\r\n);\r\n","import { applyMiddleware } from 'redux';\r\n// import thunk from 'redux-thunk';\r\n\r\nexport default applyMiddleware();\r\n","import { createStore } from 'redux';\r\nimport rootReducer from '../reducers';\r\nimport middlewares from './middlewares';\r\n\r\nexport default function configureStore(initialState) {\r\n  return createStore(rootReducer, initialState, middlewares);\r\n}\r\n"],"sourceRoot":""}
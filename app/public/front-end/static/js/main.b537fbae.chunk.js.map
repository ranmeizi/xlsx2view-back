{"version":3,"sources":["redux/constants/charts/index.js","logo.svg","redux/store/configureStore.js","redux/constants/tabpanes/index.js","redux/actions/tabpanes/index.js","components/header/Header.jsx","views/MainView.jsx","redux/store/index.js","config/index.js","api/index.js","api/service.js","components/charts/Echarts.jsx","views/Charts/pages/Income_ticket_dataset.jsx","views/HomePage/HomePage.jsx","views/DataInput/ControlForm.jsx","views/DataInput/DataInput.jsx","views/Query/testQuery/TestQuery.jsx","views/Statistics/StatementMain.jsx","views/Charts/pages/Sell_ticket.jsx","views/Charts/pages/Income_ticket.jsx","views/Statistics/Detail/StatisticsDetail.jsx","views/Statistics/testLine/TestLine.jsx","redux/actions/charts/index.js","views/Charts/ChartsMain.jsx","views/Charts/pages/Dash_Financials.jsx","views/Charts/pages/Dash_Attendance.jsx","views/Charts/pages/Dash_TicketTypes.jsx","views/Charts/pages/Dash_PricingTiers.jsx","routes/index.js","routes/react-router-config.js","App.js","serviceWorker.js","index.js","redux/reducers/app/index.js","redux/reducers/tabpanes/index.js","redux/reducers/charts/index.js","redux/reducers/index.js","redux/store/middlewares.js","redux/store/configureStore.prod.js"],"names":["__webpack_require__","d","__webpack_exports__","SAVE_BATCHS","module","exports","p","require","PUSH_TAB_LIST","REMOVE_TAB_LIST","CLEAR_TAB_LIST","SET_ACTIVE","LISTEN_HASH","HEADER_MENU","CACHE_PANES","addTabList","tabItem","type","actionType","removeTabList","key","setActiveKey","cachePanes","TabPane","Tabs","Header","onChange","activeKey","_this","props","onEdit","targetKey","action","react_default","a","createElement","row","col","span","this","children","tabs","rdx_activeKey","tabPosition","rdx_panes","map","item","tab","concat","title","closable","Component","connect","state","ownnProps","tabpanes","panes","dispatch","bindActionCreators","Sider","Layout","Content","MainView","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","menuOnchange","_ref","name","toggle","setState","collapsed","layout","className","trigger","collapsible","src","logo","alt","menu","theme","mode","defaultSelectedKeys","onClick","Item","icon","header_Header","renderRoutes","route","routes","rdx_menuData","menuData","withRouter","store","configureStore","persistor","persistStore","CONFIG","SERVER_BASE_URL","FILE_ACCEPT","BASE_URL","axios","defaults","baseURL","service","uploadXLSX","params","post","getList","pageSize","startTime","endTime","pageNum","_ref$batchs","batchs","getAllOfBatchs","get","getTestLineS","getAvailableBatchNum","_ref2","_ref2$batch","batch","getRptList","_ref3","_ref3$current","current","searchDetail","_ref4","_ref4$batch","getChartData","_ref5","_ref5$batchs","getSingleField","_ref6","_ref6$statTable","statTable","_ref6$batch","getState","Echarts","myCharts","statData","option","getData","charts","API","then","res","data","success","mapper","initChart","echarts","init","refs","chart","setOption","onDataSet","assertThisInitialized","_this$props","width","height","ref","style","legend1","value","inc_early_bird","inc_advance","inc_gameday","inc_other","Income_ticket_dataset","result","sort","b","moment","game_date","console","log","format","toConsumableArray","sItem","legend","tooltip","showContent","dataset","source","xAxis","yAxis","gridIndex","grid","top","series","smooth","seriesLayoutBy","id","radius","center","label","formatter","encode","itemName","Echarts_Echarts","component","on","event","xAxisInfo","axesInfo","dimension","HomePage","nextProps","Income_ticket_dataset_Income_ticket_dataset","Option","Select","optList","0","1","2","3","4","5","6","formItemLayout","labelCol","offset","wrapperCol","ControlForm","FieldData","initialValue","attr","form","setFieldsValue","weekday","day","rulse","transform","rules","pattern","required","message","addonBefore","input","es_select","entries","arr","date_picker","_this2","getFieldDecorator","es_form","assign","onSubmit","handleSubmit","initData","renderFieldItem","Form","create","Step","Steps","Dragger","Upload","confirm","Modal","DataInput","steps","rule","_rule","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","batchNum","repeat","warn","msg","fileList","length","stop","apply","arguments","content","upload_props","size","placeholder","e","target","_rule2","_callee2","rc","_context2","Promise","resolve","reject","validateFields","err","vals","formData","sent","DataInput_ControlForm","multiple","beforeUpload","file","accept","join","info","status","error","_callee3","newArr","_context3","stepStatus","t0","submit","onOk","FormData","append","forEach","kv","onCancel","es_steps","index","es_button","marginLeft","RangePicker","DatePicker","TestQuery","reset","dateString","objectSpread","_res$data$data","list","count","column","autoid","allOfBatchs","handleChange","onPageChange","page","_x","_x2","justify","align","showTime","defaultValue","TestQuery_Option","shape","table","columns","dataSource","scroll","x","pagination","total","gridStyle","textAlign","StatementMain","rptList","path","empty","card","Grid","_this$state","i","push","opposition","statistic","total_tickets_ebrite","total_tics_income","total_income_tics_merch_other","JSON","parse","Bundle","sum","income_lbl_card_tics","income_other_tics","income_groups_tickets","income_merch_other_none_group_packages","legend2","season_tics_comps","tickers_sold","total_adults_groups","tot_child_groups","tickets_scanned","Sell_ticket","mapper1","orient","left","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","mapper2","chartStyle","Income_ticket","ticket_type","price_tier","arg1","seriesName","percent","income","selectedMode","normal","position","labelLine","show","cnt","StatisticsDetail","getDetail","match","descriptions","bordered","slicedToArray","Sell_ticket_Sell_ticket","Income_ticket_Income_ticket","TestLine","yArr","stack","dom","document","getElementById","axisPointer","right","bottom","containLabel","set_batch","set_name","ChartsMain","datasetClick","singleClick","multipleClick","ChartsMain_Option","marginTop","Dash_Financials","oppositions","stat","Dash_Attendance","total_adults","total_concessions","total_children","total_family1","total_family2","inc_audults","inc_concessions","inc_children","inc_family1","inc_family2","legend3","toFixed","legend4","Dash_TicketTypes","backgroundColor","toolbox","feature","saveAsImage","boundaryGap","areaStyle","mapper3","mapper4","early_bird_tics","advance_tics","gameday_tics","other_tics","Dash_PricingTiers","DashFinancials","render","alive","lastPanes","some","location","pathname","KeepAlive","disabled","DataInput_DataInput","exact","StatisticsMain","unmount","Dash_Financials_Dash_Financials","Dash_Attendance_Dash_Attendance","Dash_TicketTypes_Dash_TicketTypes","Dash_PricingTiers_Dash_PricingTiers","Income_Cartesian_default","ex","reactRouter","React","_extends","prototype","hasOwnProperty","App","react_router_dom","extraProps","switchProps","Routes","CacheSwitch","CacheRoute","strict","when","cacheKey","behavior","cached","display","undefined","Boolean","window","hostname","ReactDOM","es","integration_react","Provider","src_App","navigator","serviceWorker","ready","registration","unregister","initialState","initialPanes","url","href","origin","Income_Cartesian","rootReducer","combineReducers","appReducer","ActionTypes","nextPanes","filter","hash","defineProperty","persistReducer","storage","applyMiddleware","createStore","middlewares"],"mappings":"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","file":"static/js/main.b537fbae.chunk.js","sourcesContent":["export const SAVE_BATCHS = 'SAVE_BATCHS';","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","if (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./configureStore.prod');\r\n} else {\r\n  module.exports = require('./configureStore.dev');\r\n}\r\n","export const PUSH_TAB_LIST = 'PUSH_TAB_LIST';\r\nexport const REMOVE_TAB_LIST = 'REMOVE_TAB_LIST';\r\nexport const CLEAR_TAB_LIST = 'FUNNEL_PARAMS';\r\nexport const SET_ACTIVE = 'SET_ACTIVE';\r\nexport const LISTEN_HASH = 'LISTEN_HASH';\r\nexport const HEADER_MENU = 'HEADER_MENU';\r\nexport const CACHE_PANES = 'CACHE_PANES';\r\n","import * as actionType from '../../constants/tabpanes'\r\n\r\nexport const addTabList = (tabItem) => ({\r\n    type: actionType.PUSH_TAB_LIST,\r\n    tabItem\r\n})\r\nexport const removeTabList = (key) => ({\r\n    type: actionType.REMOVE_TAB_LIST,\r\n    key\r\n})\r\n// export const clearTabList = () => ({\r\n//     type: actionType.CLEAR_TAB_LIST\r\n// })\r\nexport const setActiveKey = (key) => ({\r\n    type: actionType.SET_ACTIVE,\r\n    key\r\n})\r\nexport const cachePanes = () => ({\r\n    type: actionType.CACHE_PANES,\r\n})","import React, { Component } from 'react';\r\nimport { Tabs, Row, Col } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as tabpanes from '../../redux/actions/tabpanes'\r\nconst { TabPane } = Tabs;\r\n\r\nclass Header extends Component {\r\n  onChange = (activeKey) => {\r\n    // 先缓存操作前的panes数组\r\n    this.props.cachePanes()\r\n    // panes进行增减操作\r\n    this.props.setActiveKey(activeKey)\r\n  }\r\n  onEdit = (targetKey, action) => {\r\n    if (action === 'remove') {\r\n      // 先缓存操作前的panes数组\r\n      this.props.cachePanes()\r\n      // panes进行增减操作\r\n      this.props.removeTabList(targetKey)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col span={1}>{this.props.children}</Col>\r\n        <Col span={23}>\r\n          <Tabs\r\n            activeKey={this.props.rdx_activeKey}\r\n            tabPosition='top'\r\n            type=\"editable-card\"\r\n            onChange={this.onChange}\r\n            onEdit={this.onEdit}>\r\n            {this.props.rdx_panes.map(item => (\r\n              <TabPane tab={`${item.title}`} key={item.key} closable={item.closable} />\r\n            ))}\r\n          </Tabs>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownnProps) => ({\r\n  rdx_panes: state.tabpanes.panes,\r\n  rdx_activeKey: state.tabpanes.activeKey\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  removeTabList: bindActionCreators(tabpanes.removeTabList, dispatch),\r\n  setActiveKey: bindActionCreators(tabpanes.setActiveKey, dispatch),\r\n  cachePanes: bindActionCreators(tabpanes.cachePanes, dispatch)\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React, { Component } from 'react';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport logo from '../logo.svg';\r\nimport Header from '../components/header/Header';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { renderRoutes } from 'react-router-config';\r\n// import { renderRoutes } from '../routes/react-router-config'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as tabpanes from '../redux/actions/tabpanes'\r\n\r\nconst { Sider, Content } = Layout;\r\n\r\nclass MainView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: false\r\n    };\r\n  }\r\n  menuOnchange = ({ item, key }) => {\r\n    // 先缓存操作前的panes数组\r\n    this.props.cachePanes()\r\n    // panes进行增减操作\r\n    this.props.addTabList({\r\n      key: key,\r\n      title: item.props.name,\r\n      closable: true\r\n    })\r\n  };\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout className=\"MainView\">\r\n        <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n          <div>\r\n            <img src={logo} className=\"App-logo\" alt=\"\" />\r\n            <div className=\"logo\" />\r\n          </div>\r\n          <Menu\r\n            theme=\"dark\"\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={['/homepage']}\r\n            onClick={this.menuOnchange}\r\n          >\r\n            <Menu.Item key=\"/homepage\" name='Homepage'>\r\n              <Icon type=\"contacts\" />\r\n              <span>Homepage</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/input\" name='ImportData'>\r\n              <Icon type=\"file-excel\" />\r\n              <span>ImportData</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/query\" name='QueryData'>\r\n              <Icon type=\"area-chart\" />\r\n              <span>QueryData</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/statement\" name='Statement'>\r\n              <Icon type=\"area-chart\" />\r\n              <span>Statement</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/charts\" name='Charts'>\r\n              <Icon type=\"area-chart\" />\r\n              <span>Charts</span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <Header className='header'>\r\n            <Icon\r\n              className=\"trigger\"\r\n              type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n              onClick={this.toggle}\r\n            />\r\n          </Header>\r\n          <Content className='content'>{renderRoutes(this.props.route.routes)}</Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownnProps) => ({\r\n  rdx_menuData: state.tabpanes.menuData,\r\n  rdx_activeKey: state.tabpanes.activeKey\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  addTabList: bindActionCreators(tabpanes.addTabList, dispatch),\r\n  cachePanes: bindActionCreators(tabpanes.cachePanes, dispatch)\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MainView));\r\n","import configureStore from './configureStore'\r\nimport { persistStore } from 'redux-persist'\r\nconst store = configureStore()\r\nlet persistor = persistStore(store)\r\n\r\nexport {\r\n  store,\r\n  persistor,\r\n}","export const CONFIG = {\r\n  SERVER_BASE_URL: 'http://127.0.0.1:7001',\r\n  FILE_ACCEPT: ['.xls', '.xlsm', '.xlsx']\r\n};\r\n","import axios from 'axios';\r\nimport { CONFIG } from '../config';\r\nconst BASE_URL = CONFIG.SERVER_BASE_URL;\r\n\r\n// 默认请求路径\r\naxios.defaults.baseURL = BASE_URL;\r\n// 配置拦截器\r\n\r\nexport default axios;\r\n","import axios from './';\r\n\r\nfunction uploadXLSX(params) {\r\n  return axios.post('/input/xlsx2db', params);\r\n}\r\n\r\nfunction getList({\r\n  pageSize, //每页条数\r\n  startTime, //开始时间\r\n  endTime, //结束时间\r\n  pageNum, //当前页\r\n  batchs: batchs = [] //batchs\r\n}) {\r\n  let url = '/result/pagedata';\r\n  let params = { pageSize, startTime, endTime, pageNum, batchs };\r\n  return axios.post(url, params);\r\n}\r\nfunction getTestLineS() {\r\n  let url = '/statistics/teststand';\r\n  return axios.get(url);\r\n}\r\nfunction getAvailableBatchNum({\r\n  batch: batch = null //批次号\r\n}) {\r\n  let url = '/input/repeatBatch';\r\n  let params = { batch };\r\n  return axios.get(url, { params });\r\n}\r\nfunction getRptList({\r\n  current: current = 1 //当前页\r\n}) {\r\n  let url = '/statistics/pagedata';\r\n  let params = { current };\r\n  return axios.post(url, params);\r\n}\r\nfunction searchDetail({ batch: batch = null }) {\r\n  let url = '/statistics/searchDetail';\r\n  let params = { batch };\r\n  return axios.post(url, params);\r\n}\r\nfunction getAllOfBatchs() {\r\n  let url = '/result/batchSelect';\r\n  let params = {};\r\n  return axios.get(url, { params });\r\n}\r\n// 获取图表数据\r\nfunction getChartData({ batchs: batchs = [] }) {\r\n  let url = '/statistics/getChartData';\r\n  let params = { batchs };\r\n  return axios.post(url, params);\r\n}\r\n// 获取单场分析数据\r\nfunction getSingleField({\r\n  statTable: statTable = '', // 种类\r\n  batch: batch = '' // 批次号\r\n}) {\r\n  let url = '/statistics/getSingleField';\r\n  let params = { statTable, batch };\r\n  return axios.post(url, params);\r\n}\r\n\r\nexport default {\r\n  uploadXLSX, //上传excel\r\n  getList, //翻页表格\r\n  getAllOfBatchs, //获取batch下拉列表值\r\n  getTestLineS, //ceshi\r\n  getAvailableBatchNum, //检查批次号是否重复\r\n  getRptList, //翻页卡片\r\n  searchDetail, //查询统计详情\r\n  getChartData, //获取图表数据\r\n  getSingleField //获取单场分析数据\r\n};\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport echarts from 'echarts'\r\nimport { store } from '../../redux/store'\r\nimport API from '../../api/service'\r\n\r\nconst { getState } = store\r\n\r\nexport default class Echarts extends Component {\r\n  static propTypes = {\r\n    type: PropTypes.string, //图表种类，用来请求数据\r\n    mapper: PropTypes.func, //图表opcion,用于生成echarts的option\r\n    height: PropTypes.number, //高度 默认800\r\n    width: PropTypes.number, //宽度 默认1200\r\n  }\r\n  myCharts = null\r\n  statData = {} //存放数据\r\n  option = {} //echart配置\r\n\r\n  getData = () => {\r\n    const { type } = this.props\r\n    // 去store中取对应的数组\r\n    const batchs = getState().charts[type]\r\n    API.getChartData({ batchs }).then(res => {\r\n      if (res.data.success) {\r\n        this.statData = res.data.data\r\n        this.option = this.props.mapper(this.statData)\r\n        this.initChart()\r\n      }\r\n    })\r\n  }\r\n  componentWillMount() {\r\n\r\n  }\r\n  async componentDidMount() {\r\n    this.getData()\r\n\r\n  }\r\n  initChart = () => {\r\n    this.myCharts = echarts.init(this.refs.chart);\r\n    this.myCharts.setOption(this.option, true);\r\n    // 自定义事件\r\n    if (this.props.onDataSet) {\r\n      this.props.onDataSet(this)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { width, height } = this.props\r\n    return (\r\n      <div>\r\n        <div ref='chart' style={{ height: `${height || 800}px`, width: `${width || 1200}px` }}></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Echarts from '../../../components/charts/Echarts'\r\nimport moment from 'moment'\r\nconst legend1 = [\r\n  {\r\n    name: 'Early Bird',\r\n    value: (data) => data.inc_early_bird\r\n  },\r\n  {\r\n    name: 'Advance',\r\n    value: (data) => data.inc_advance\r\n  },\r\n  {\r\n    name: 'Gameday',\r\n    value: (data) => data.inc_gameday\r\n  },\r\n  {\r\n    name: 'Other',\r\n    value: (data) => data.inc_other\r\n  }\r\n]\r\nconst legend2 = [\r\n  {\r\n    name: '% Adults',\r\n    value: (data) => (data.total_adults / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Concessions',\r\n    value: (data) => (data.total_concessions / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Children',\r\n    value: (data) => (data.total_children / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Family1',\r\n    value: (data) => (data.total_family1 / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Family2',\r\n    value: (data) => (data.total_family2 / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  }\r\n]\r\nexport default class Income_ticket_dataset extends Component {\r\n\r\n  mapper(statData) {\r\n    statData.result.sort((a, b) => moment(a.game_date) - moment(b.game_date))\r\n    console.log([\r\n      ['game_date'].concat(statData.result.map(item => moment(item.game_date).format('ll'))),\r\n      ...legend1.map(item => {\r\n        return [item.name].concat(statData.result.map(sItem => item.value(sItem)))\r\n      })\r\n    ])\r\n    return {\r\n      legend: {},\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        showContent: false\r\n      },\r\n      dataset: {\r\n        source: [\r\n          ['game_date'].concat(statData.result.map(item => moment(item.game_date).format('ll'))),\r\n          ...legend1.map(item => {\r\n            return [item.name].concat(statData.result.map(sItem => item.value(sItem)))\r\n          })\r\n        ]\r\n      },\r\n      xAxis: { type: 'category' },\r\n      yAxis: { gridIndex: 0 },\r\n      grid: { top: '55%' },\r\n      series: [\r\n        ...legend1.map(item => ({ type: 'line', smooth: true, seriesLayoutBy: 'row' })),\r\n        {\r\n          type: 'pie',\r\n          id: 'pie',\r\n          radius: '30%',\r\n          center: ['50%', '25%'],\r\n          label: {\r\n            formatter: '{b}: £{@2012} ({d}%)'\r\n          },\r\n          encode: {\r\n            itemName: 'game_date',\r\n            value: '2012',\r\n            tooltip: '2012'\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='ChartView'>\r\n        <Echarts type='Income_ticket_dataset' mapper={this.mapper} onDataSet={\r\n          (component) => {\r\n            component.myCharts.on('updateAxisPointer', (event) => {\r\n              var xAxisInfo = event.axesInfo[0];\r\n              if (xAxisInfo) {\r\n                var dimension = xAxisInfo.value + 1;\r\n                component.myCharts.setOption({\r\n                  series: {\r\n                    id: 'pie',\r\n                    label: {\r\n                      formatter: '{b}: {@[' + dimension + ']} ({d}%)'\r\n                    },\r\n                    encode: {\r\n                      value: dimension,\r\n                      tooltip: dimension\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          }\r\n        } />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Dataset from '../Charts/pages/Income_ticket_dataset'\r\n\r\nclass HomePage extends Component {\r\n  componentWillMount() {\r\n    console.log('我是home，我要mount了');\r\n  }\r\n  componentDidMount() {\r\n    console.log('我是home，我mount了');\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps)\r\n  }\r\n  componentWillUnmount() {\r\n    console.log('不管用啊');\r\n  }\r\n  render() {\r\n    return <div><Dataset /></div>;\r\n  }\r\n}\r\nexport default withRouter(HomePage);\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Input, Select, DatePicker, Form, Row, Col } from 'antd'\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\n\r\nconst optList = { '0': 'Sunday', '1': 'Monday', '2': 'Tuesday', '3': 'Wednesday', '4': 'Thursday', '5': 'Friday', '6': 'Saturday' }\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    offset: 4,\r\n    span: 6\r\n  },\r\n  wrapperCol: {\r\n    span: 6\r\n  },\r\n};\r\n\r\nclass ControlForm extends Component {\r\n  FieldData = [\r\n    // 比赛日期\r\n    {\r\n      id: 'game_date',\r\n      label: 'Game Date',\r\n      initialValue: moment(),\r\n      attr: {\r\n        onChange: (value) => {\r\n          // 修改weekday的值\r\n          this.props.form.setFieldsValue({ 'weekday': optList[value.day()] })\r\n          console.log(value)\r\n        }\r\n      },\r\n      rulse: [\r\n        { transform: (value) => moment(value).format('YYYY-MM-DD HH:mm:ss') }\r\n      ],\r\n      type: 'DatePicker'\r\n    },\r\n    // 比赛对阵\r\n    {\r\n      id: 'opposition',\r\n      label: 'Opposition',\r\n      initialValue: null,\r\n      type: 'Input',\r\n      rules: [{ pattern: /.*/ }, {\r\n        required: true,\r\n        message: 'opposition is null',\r\n      }]\r\n    },\r\n    // 星期\r\n    {\r\n      id: 'weekday',\r\n      label: 'Weekday',\r\n      initialValue: 'Monday',\r\n      type: 'Select',\r\n      optList: optList,\r\n    },\r\n    {\r\n      id: 'days_since_prev_game',\r\n      label: 'Days Since Prev Game',\r\n      initialValue: '0',\r\n      type: 'Input',\r\n    },\r\n    {\r\n      id: 'no_of_groups',\r\n      label: 'No. of Groups',\r\n      initialValue: '0',\r\n      type: 'Input',\r\n    },\r\n    {\r\n      id: 'group_adults',\r\n      label: 'Group Adults',\r\n      initialValue: '0',\r\n      type: 'Input',\r\n    },\r\n    {\r\n      id: 'group_children',\r\n      label: 'Group Children',\r\n      initialValue: '0',\r\n      type: 'Input',\r\n    },\r\n    {\r\n      id: 'group_tickets_revenue',\r\n      label: 'Group Tickets Revenue',\r\n      initialValue: '0',\r\n      type: 'Input',\r\n      attr: {\r\n        addonBefore: '￡'\r\n      }\r\n    },\r\n    {\r\n      id: 'eventbrite_add_ons',\r\n      label: 'Eventbrite Add-ons',\r\n      initialValue: '0',\r\n      type: 'Input',\r\n      attr: {\r\n        addonBefore: '￡'\r\n      }\r\n    },\r\n    {\r\n      id: 'group_add_ons_food',\r\n      label: 'Group Add-ons/Food',\r\n      initialValue: '0',\r\n      type: 'Input',\r\n      attr: {\r\n        addonBefore: '￡'\r\n      }\r\n    },\r\n    {\r\n      id: 'other_add_ons_food',\r\n      label: 'Other Add-ons/Food',\r\n      initialValue: '0',\r\n      type: 'Input',\r\n      attr: {\r\n        addonBefore: '￡'\r\n      }\r\n    },\r\n    {\r\n      id: 'spare_comps_printed',\r\n      label: 'Spare Comps Printed',\r\n      initialValue: '0',\r\n      type: 'Input'\r\n    },\r\n    {\r\n      id: 'comparable_game_date',\r\n      label: 'Comparable Game Date',\r\n      initialValue: moment(),\r\n      type: 'DatePicker',\r\n      rulse: [\r\n        { transform: (value) => moment(value).format('YYYY-MM-DD HH:mm:ss') }\r\n      ],\r\n    }\r\n  ]\r\n\r\n  renderFieldItem(item) {\r\n    switch (item.type) {\r\n      case 'Input': return <Input {...item.attr} />\r\n      case 'Select': return <Select>\r\n        {\r\n          Object.entries(item.optList).map(arr => <Option value={arr[0]} key={arr[0]}>{arr[1]}</Option>)\r\n        }\r\n      </Select>\r\n      case 'DatePicker': return <DatePicker {...item.attr} />\r\n      default: return <Input />\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    return (\r\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Row>\r\n          {\r\n            this.FieldData.map(item => {\r\n              return <Col span={12}><Form.Item label={item.label} key={item.label}>\r\n                {getFieldDecorator(item.id, { rules: item.rules, initialValue: this.props.initData[item.id] || item.initialValue })(\r\n                  this.renderFieldItem(item)\r\n                )}\r\n              </Form.Item></Col>\r\n            })\r\n          }\r\n        </Row>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\nControlForm.propTypes = {\r\n  initData: PropTypes.object\r\n}\r\n\r\nexport default Form.create({ name: 'ControlForm' })(ControlForm);","import React, { Component } from 'react';\r\nimport { Upload, Icon, message, Steps, Button, Input, Modal } from 'antd';\r\nimport moment from 'moment';\r\nimport API from '../../api/service'\r\nimport { CONFIG } from '../../config'\r\nimport ControlForm from './ControlForm'\r\n\r\n\r\nconst { Step } = Steps;\r\nconst { Dragger } = Upload;\r\nconst { confirm } = Modal;\r\n\r\nexport default class DataInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 0,\r\n      fileList: [],\r\n      batchNum: '',\r\n      stepStatus: [false, false, false],\r\n      formData: {}\r\n    };\r\n  }\r\n  steps = () => [\r\n    {\r\n      title: `First:Select your files and add a batch number`,\r\n      rule: async () => {\r\n        // 验证一下批次号是否重复\r\n        return API.getAvailableBatchNum({ batch: this.state.batchNum }).then(res => {\r\n          if (res.data.success) {\r\n            if (res.data.data.repeat) {\r\n              // 重复的\r\n              message.warn(res.data.msg)\r\n            }\r\n            else {\r\n              message.success(res.data.msg)\r\n            }\r\n            return this.state.fileList.length > 0 && !res.data.data.repeat\r\n          }\r\n        })\r\n      },\r\n      msg: () => {\r\n        message.warn('Please select the file')\r\n      },\r\n      content: (\r\n        <div style={{height:'100%'}}>\r\n          <Dragger {...this.upload_props} fileList={this.state.fileList}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <Icon type=\"inbox\" />\r\n            </p>\r\n            <p className=\"ant-upload-text\">\r\n              Click or drag file to this area to upload\r\n          </p>\r\n            <p className=\"ant-upload-hint\">\r\n              Support for a single or bulk upload. Strictly prohibit from\r\n              uploading company data or other band files\r\n          </p>\r\n          </Dragger>\r\n          <Input\r\n            size=\"large\"\r\n            placeholder=\"Please enter batch numberlarge size\"\r\n            value={this.state.batchNum}\r\n            onChange={e => {\r\n              this.setState({ batchNum: e.target.value });\r\n            }}\r\n          />\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: 'Second:Adding descriptions to the data',\r\n      rule: async () => {\r\n        if (this.refs.ControlForm) {\r\n          let rc = await new Promise((resolve, reject) => {\r\n            this.refs.ControlForm.validateFields((err, vals) => {\r\n              if (!err) {\r\n                this.setState({ formData: vals })\r\n              }\r\n              resolve(!err && true)\r\n            })\r\n          })\r\n          return rc\r\n        }\r\n      },\r\n      msg: () => {\r\n        message.warn('Please add a description')\r\n      },\r\n      content: (\r\n        <div>\r\n          <h3>\r\n            You have to add descriptions to the data, which are essential for statistics.\r\n          </h3>\r\n          <p>\r\n            Q:Input error data?\r\n          </p>\r\n          <p>\r\n            A:Enter the &lt;BasicData&gt; page, use batch number to delete misleading data, and then re-import\r\n          </p>\r\n          <ControlForm ref='ControlForm' initData={this.state.formData} />\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: 'Post Data',\r\n      content: (\r\n        <h2>To complete the two steps,click Done button to upload file</h2>\r\n      )\r\n    }\r\n  ];\r\n  upload_props = {\r\n    name: 'file',\r\n    multiple: false,\r\n    beforeUpload: (file, fileList) => {\r\n      let batchNum = `${moment().format('YYYYMMDDhhmmss')}-${file.name}`;\r\n      this.setState({ fileList, batchNum });\r\n      return false;\r\n    },\r\n    accept: CONFIG.FILE_ACCEPT.join(','),\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    }\r\n  };\r\n  next = async () => {\r\n    // 验证\r\n    let newArr = [...this.state.stepStatus]\r\n    newArr[this.state.current] = await this.steps()[this.state.current].rule() && true\r\n    const current = this.state.current + 1;\r\n    if (newArr[this.state.current]) {\r\n      this.setState({ current, stepStatus: newArr });\r\n    } else {\r\n      this.steps()[this.state.current].msg()\r\n    }\r\n\r\n  }\r\n\r\n  prev() {\r\n    // 验证\r\n    let newArr = [...this.state.stepStatus]\r\n    newArr[this.state.current] = this.steps()[this.state.current].rule() && true\r\n    const current = this.state.current - 1;\r\n    this.setState({ current, stepStatus: newArr });\r\n  }\r\n  submit = () => {\r\n    confirm({\r\n      title: 'Submit',\r\n      content: 'After confirming that your input is correct, click the button to submit',\r\n      onOk:()=>{\r\n        const formData = new FormData();\r\n        formData.append('batch', this.state.batchNum)\r\n        // 循环添加batch描述\r\n        Object.entries(this.state.formData).forEach(kv => formData.append(...kv))\r\n        this.state.fileList.forEach((file) => {   // fileList 是要上传的文件数组\r\n          formData.append('files', file);\r\n        });\r\n\r\n        return API.uploadXLSX(formData).then(res => {\r\n          if (res.data.success) {\r\n            message.success(res.data.msg)\r\n           \r\n          } else {\r\n            message.warn(res.data.msg)\r\n          }\r\n           // 重置\r\n           this.setState({\r\n            current: 0,\r\n            fileList: [],\r\n            batchNum: '',\r\n            stepStatus: [false, false, false],\r\n            formData: {}\r\n          })\r\n        })\r\n      },\r\n      onCancel() { },\r\n    });\r\n\r\n  };\r\n  render() {\r\n    const { current } = this.state;\r\n    const steps = this.steps();\r\n    return (\r\n      <div className=\"DataInput\">\r\n        <div className=\"DataInput-inner shadow-card\">\r\n          <Steps current={current}>\r\n            {steps.map((item, index) => (\r\n              <Step\r\n                key={item.title}\r\n                title={item.title}\r\n              />\r\n            ))}\r\n          </Steps>\r\n          <div className=\"steps-content\">{steps[current].content}</div>\r\n          <div className=\"steps-action\">\r\n            {current < steps.length - 1 && (\r\n              <Button type=\"primary\" onClick={() => this.next()}>\r\n                Next\r\n              </Button>\r\n            )}\r\n            {current === steps.length - 1 && (\r\n              <Button type=\"primary\" onClick={this.submit}>\r\n                Upload\r\n              </Button>\r\n            )}\r\n            {current > 0 && (\r\n              <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\r\n                Previous\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport API from '../../../api/service'\r\nimport moment from 'moment'\r\nimport { Table, Row, Col, DatePicker, Select, Button } from 'antd'\r\n\r\nconst { Option } = Select;\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default class TestQuery extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      params: {\r\n        pageSize: 20,\r\n        startTime: '2018-01-01 00:00:00',\r\n        endTime: '2019-08-13 00:00:00',\r\n        pageNum: 1,\r\n        batchs: []\r\n      },\r\n      list: [],\r\n      count: 0,\r\n      column: [], //表头数组\r\n      allOfBatchs: [] //批次数组\r\n    }\r\n  }\r\n  reset = () => {\r\n\r\n  }\r\n\r\n  onChange = (value, dateString) => {\r\n    this.setState({\r\n      params: { ...this.state.params, startTime: value[0].format('YYYY-MM-DD HH:mm:ss'), endTime: value[1].format('YYYY-MM-DD HH:mm:ss') }\r\n    })\r\n  }\r\n\r\n  getData = () => {\r\n    API.getList(this.state.params).then(res => {\r\n      if (res.data.success) {\r\n\r\n        let { list, count, column, batchs } = res.data.data\r\n        list = list.map(item => ({ ...item, key: item.autoid }))\r\n        // column = column.map(item => ({ ...item }))\r\n        this.setState({ list, count, column, allOfBatchs: batchs })\r\n      }\r\n    })\r\n  }\r\n  handleChange = (value) => {\r\n    this.setState({ params: { ...this.state.params, batchs: value } })\r\n  }\r\n  // 翻页\r\n  onPageChange = async (page, pageSize) => {\r\n    await this.setState({ params: { ...this.state.params, pageNum: page } })\r\n    this.getData()\r\n  }\r\n  componentWillMount() {\r\n    this.getData()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='TestQuery'>\r\n        {/* 上面搜索项 */}\r\n        <Row type='flex' justify='center' align='bottom' className='TestQuery-filter shadow-card'>\r\n          {/* 时间选择器 */}\r\n          <Col span={6}>\r\n            Choose a time\r\n            <RangePicker\r\n              showTime={{ format: 'HH:mm:ss' }}\r\n              format=\"YYYY-MM-DD HH:mm:ss\"\r\n              placeholder={['Start Time', 'End Time']}\r\n              onChange={this.onChange}\r\n              onOk={this.onOk}\r\n              value={[moment(this.state.params.startTime), moment(this.state.params.endTime)]}\r\n            />\r\n          </Col>\r\n          {/* 选择批次 */}\r\n          <Col span={6}>\r\n            Choose a batch\r\n            <Select\r\n              mode=\"multiple\"\r\n              style={{ width: '100%' }}\r\n              placeholder=\"Please select\"\r\n              defaultValue={[]}\r\n              onChange={this.handleChange}\r\n            >\r\n              {\r\n                this.state.allOfBatchs.map(item => <Option key={item}>{item}</Option>)\r\n              }\r\n            </Select>\r\n          </Col>\r\n          {/* 查询 */}\r\n          <Col span={6}> <Button onClick={() => {\r\n            this.setState({\r\n              params: {\r\n                ...this.state.params,\r\n                pageNum: 1,\r\n              },\r\n              list: [],\r\n              count: 0,\r\n              column: [],\r\n              allOfBatchs: []\r\n            }, this.getData)\r\n          }} type=\"primary\" shape=\"circle\" icon=\"search\" /></Col>\r\n        </Row>\r\n        {/* 下面表格 */}\r\n        <Table\r\n          className='TestQuery-table shadow-card'\r\n          columns={this.state.column}\r\n          dataSource={this.state.list}\r\n          scroll={{ x: 3000 }}\r\n          size='small'\r\n          pagination={{\r\n            pageSize: this.state.params.pageSize,\r\n            total: this.state.count,\r\n            current: this.state.params.pageNum,\r\n            onChange: this.onPageChange\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Row, Col, Statistic, Pagination, Empty } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport API from '../../api/service'\r\nimport * as tabpanes from '../../redux/actions/tabpanes'\r\nimport moment from 'moment'\r\n\r\nconst gridStyle = {\r\n  height: '250px',\r\n  width: '25%',\r\n  textAlign: 'center',\r\n};\r\n\r\nclass StatementMain extends Component {\r\n  state = {\r\n    current: 1,\r\n    rptList: [],\r\n    total: 0\r\n  }\r\n  onClick = ({ name, path }) => {\r\n    // 先缓存操作前的panes数组\r\n    this.props.cachePanes()\r\n    // panes进行增减操作\r\n    this.props.addTabList({\r\n      key: path,\r\n      title: name,\r\n      closable: true\r\n    })\r\n  }\r\n  componentWillMount() {\r\n    // 获取列表\r\n    this.getRptList()\r\n  }\r\n  getRptList = () => {\r\n    API.getRptList({ current: this.state.current }).then(res => {\r\n      if (res.data.success) {\r\n        this.setState({\r\n          rptList: res.data.data.list,\r\n          total: res.data.data.count\r\n        })\r\n      }\r\n    })\r\n  }\r\n  empty = () =>\r\n    <Card.Grid style={gridStyle}>\r\n      <Row><Empty /></Row>\r\n    </Card.Grid>\r\n\r\n  render() {\r\n    const { rptList, total } = this.state\r\n    let length = rptList.length\r\n    // 数组补齐\r\n    for (let i = length; i < 12; i++) {\r\n      rptList.push(false)\r\n    }\r\n    return (\r\n      <div className='StatementMain'>\r\n        <Card title=\"Card Title\">\r\n          {\r\n            rptList.map(item => item ? <Card.Grid onClick={() => this.onClick({ name: item.opposition, path: `/statement/stat-detail/${item.batch}` })} style={gridStyle}>\r\n              <Row>\r\n                <Col><h2>{item.opposition}</h2></Col>\r\n                <Col span={12}>\r\n                  <Statistic title=\"Total Tickets(E'brite)\" value={item.total_tickets_ebrite} />\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Statistic title=\"Total Tics Income\" value={item.total_tics_income + '£'} />\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Statistic title=\"Game Day\" value={moment(item.game_date).format('ll')} />\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Statistic title=\"Total Income\" value={item.total_income_tics_merch_other + '£'} />\r\n                </Col>\r\n              </Row>\r\n            </Card.Grid>\r\n              : this.empty())\r\n          }\r\n        </Card>\r\n        <Pagination current={this.state.current} total={total} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownnProps) => ({\r\n  rdx_menuData: state.tabpanes.menuData,\r\n  rdx_activeKey: state.tabpanes.activeKey\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  addTabList: bindActionCreators(tabpanes.addTabList, dispatch),\r\n  cachePanes: bindActionCreators(tabpanes.cachePanes, dispatch)\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StatementMain)","import React, { Component } from 'react'\r\nimport Echarts from '../../../components/charts/Echarts'\r\n\r\nconst legend1 = [\r\n    {\r\n        name: 'Bundle',\r\n        value: (data) => JSON.parse(data['lr_promotions']).Bundle.sum\r\n    },\r\n    {\r\n        name: 'EB \"Full Price\"',\r\n        value: (data) => data.total_tics_income - (JSON.parse(data['lr_promotions']).total.sum)\r\n    },\r\n    {\r\n        name: 'EB Promos',\r\n        value: (data) => JSON.parse(data['lr_promotions']).total.sum\r\n    },\r\n    {\r\n        name: 'LBL card tics',\r\n        value: (data) => data.income_lbl_card_tics\r\n    },\r\n    {\r\n        name: 'Other tics',\r\n        value: (data) => data.income_other_tics\r\n    },\r\n    {\r\n        name: 'Groups',\r\n        value: (data) => data.income_groups_tickets\r\n    },\r\n    {\r\n        name: 'Total Merch/Food/Extras',\r\n        value: (data) => data.income_merch_other_none_group_packages\r\n    }\r\n]\r\nconst legend2 = [\r\n    {\r\n        name: 'Season Tics/Comps',\r\n        value: (data) => data.season_tics_comps\r\n    },\r\n    {\r\n        name: 'Bundle',\r\n        value: (data) => JSON.parse(data['lr_promotions']).Bundle.count\r\n    },\r\n    {\r\n        name: '\"Full\" Price',\r\n        value: (data) => data.tickers_sold - JSON.parse(data['lr_promotions']).total.count\r\n    },\r\n    {\r\n        name: 'Promos',\r\n        value: (data) => JSON.parse(data['lr_promotions']).total.count\r\n    },\r\n    {\r\n        name: 'Groups Total',\r\n        value: (data) => data.total_adults_groups + data.tot_child_groups\r\n    },\r\n    {\r\n        name: 'Total Scanned',\r\n        value: (data) => data.tickets_scanned\r\n    }\r\n]\r\nexport default class Sell_ticket extends Component {\r\n    mapper1 = (statData) => {\r\n        let data = statData.result[0] || this.props.data\r\n        return {\r\n            title: {},\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left',\r\n                data: legend1.map(item => item.name)\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'Promotions Statistics',\r\n                    type: 'pie',\r\n                    radius: '70%',\r\n                    center: ['50%', '60%'],\r\n                    data: legend1.map(item => {\r\n                        return {\r\n                            name: item.name,\r\n                            value: item.value(data)\r\n                        }\r\n                    }),\r\n                    itemStyle: {\r\n                        emphasis: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n    }\r\n    mapper2 = (statData) => {\r\n        let data = statData.result[0] || this.props.data\r\n        console.log(data)\r\n        return {\r\n            title: {},\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left',\r\n                data: legend2.map(item => item.name)\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'TicketType Statistics',\r\n                    type: 'pie',\r\n                    radius: '70%',\r\n                    center: ['50%', '60%'],\r\n                    data: legend2.map(item => {\r\n                        return {\r\n                            name: item.name,\r\n                            value: item.value(data)\r\n                        }\r\n                    }),\r\n                    itemStyle: {\r\n                        emphasis: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='ChartView'>\r\n                <div className='flex-row'>\r\n                    <Echarts {...chartStyle} type='Sell_ticket' mapper={this.mapper1} />\r\n                    <Echarts {...chartStyle} type='Sell_ticket' mapper={this.mapper2} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst chartStyle = {\r\n    width: 700,\r\n    height: 400\r\n}","import React, { Component } from 'react'\r\nimport Echarts from '../../../components/charts/Echarts'\r\nimport API from '../../../api/service'\r\nimport { store } from '../../../redux/store'\r\n\r\nconst { getState } = store\r\n\r\nexport default class Income_ticket extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            ticket_type: [],\r\n            price_tier: []\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        // 获取数据\r\n        // 去store中取对应的数组\r\n        const batchs = getState().charts['Income_ticket'].length ? getState().charts['Income_ticket'] : this.props.batchs\r\n        API.getSingleField({\r\n            statTable: 'Income_ticket',\r\n            batch: batchs[0]\r\n        }).then(res => {\r\n            if (res.data.success) {\r\n                const { ticket_type, price_tier } = res.data.data\r\n                this.setState({ ticket_type, price_tier })\r\n            }\r\n        })\r\n    }\r\n    mapper = (statData) => {\r\n        const { ticket_type, price_tier } = this.state\r\n        return {\r\n            tooltip: {\r\n                trigger: 'item',\r\n                // formatter: \"{a} <br/>{b}: {c} ({d}%)\"\r\n                formatter: (arg1) => {\r\n                    return `${arg1.seriesName} <br/>${arg1.name}: ${arg1.value} (${arg1.percent}%) <br/>£${arg1.data.income}`\r\n                }\r\n            },\r\n            legend: {\r\n                orient: 'horizontal',\r\n                x: 'left',\r\n                data: ticket_type.map(item => item.ticket_type).concat(['']).concat(price_tier.map(item => item.price_tier))\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'Price Tier',\r\n                    type: 'pie',\r\n                    selectedMode: 'single',\r\n                    radius: [0, '30%'],\r\n                    center: ['50%', '50%'],\r\n                    label: {\r\n                        normal: {\r\n                            position: 'inner'\r\n                        }\r\n                    },\r\n                    labelLine: {\r\n                        normal: {\r\n                            show: false\r\n                        }\r\n                    },\r\n                    data: price_tier.map(item => {\r\n                        return {\r\n                            name: item.price_tier,\r\n                            value: item.cnt,\r\n                            income: item.sum\r\n                        }\r\n                    })\r\n                },\r\n                {\r\n                    name: 'Ticket Type',\r\n                    type: 'pie',\r\n                    radius: ['40%', '55%'],\r\n                    center: ['50%', '50%'],\r\n                    // label: {\r\n                    //     normal: {\r\n                    //         formatter: '{a|{a}}{abg|}\\n{hr|}\\n  {b|{b}：}{c}  {per|{d}%}  ',\r\n                    //         backgroundColor: '#eee',\r\n                    //         borderColor: '#aaa',\r\n                    //         borderWidth: 1,\r\n                    //         borderRadius: 4,\r\n                    //         rich: {\r\n                    //             a: {\r\n                    //                 color: '#999',\r\n                    //                 lineHeight: 22,\r\n                    //                 align: 'center'\r\n                    //             },\r\n                    //             hr: {\r\n                    //                 borderColor: '#aaa',\r\n                    //                 width: '100%',\r\n                    //                 borderWidth: 0.5,\r\n                    //                 height: 0\r\n                    //             },\r\n                    //             b: {\r\n                    //                 fontSize: 16,\r\n                    //                 lineHeight: 33\r\n                    //             },\r\n                    //             per: {\r\n                    //                 color: '#eee',\r\n                    //                 backgroundColor: '#334455',\r\n                    //                 padding: [2, 4],\r\n                    //                 borderRadius: 2\r\n                    //             }\r\n                    //         }\r\n                    //     }\r\n                    // },\r\n                    data: ticket_type.map(item => {\r\n                        return {\r\n                            name: item.ticket_type,\r\n                            value: item.cnt,\r\n                            income: item.sum\r\n                        }\r\n                    })\r\n                },\r\n            ]\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='ChartView'>\r\n                {\r\n                    this.state.ticket_type.length > 0 && this.state.price_tier.length > 0 ?\r\n                        <Echarts type='Income_ticket' mapper={this.mapper} />\r\n                        : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Descriptions } from 'antd'\r\nimport API from '../../../api/service'\r\n\r\n// 单场统计图\r\nimport SellTicket from '../../Charts/pages/Sell_ticket'\r\nimport IncomeTicker from '../../Charts/pages/Income_ticket'\r\n\r\nexport default class StatisticsDetail extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      statData: {}\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    // 请求详情接口获取数据\r\n    this.getDetail()\r\n  }\r\n  getDetail() {\r\n    const { batch } = this.props.match.params\r\n    API.searchDetail({ batch }).then(res => {\r\n      if (res.data.success) {\r\n        this.setState({\r\n          statData: res.data.data\r\n        })\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    const { statData } = this.state\r\n    console.log(this.props.match.params.batch)\r\n    return (\r\n      <div>\r\n        <Descriptions title=\"User Info\" bordered column={6}>\r\n          {\r\n            Object.entries(statData).map(([key, value]) => {\r\n              return <Descriptions.Item label={key}>{value}</Descriptions.Item>\r\n            })\r\n          }\r\n        </Descriptions>\r\n        {\r\n          statData ? <SellTicket data={statData} /> : null\r\n        }\r\n        <IncomeTicker batchs={[this.props.match.params.batch]} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport API from '../../../api/service'\r\nimport echarts from 'echarts'\r\n\r\nexport default class TestLine extends Component {\r\n  componentDidMount() {\r\n    API.getTestLineS().then(res => {\r\n      option.legend.data = res.data.yAxis\r\n      option.yAxis.data = res.data.legend\r\n      Object.entries(res.data.yArr).forEach((item, index) => {\r\n        option.series[index] = {\r\n          name: item[0],\r\n          type: 'bar',\r\n          stack: 'total',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight'\r\n            }\r\n          },\r\n          data: item[1]\r\n        }\r\n      })\r\n      var dom = document.getElementById(\"container1\");\r\n      let myChart = echarts.init(dom);\r\n      myChart.setOption(option, true);\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id='container1' style={{ height: '800px', width: '1200px' }}></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nlet option = {\r\n  tooltip: {\r\n    trigger: 'axis',\r\n    axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n      type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n    }\r\n  },\r\n  legend: {\r\n    data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\r\n  },\r\n  grid: {\r\n    left: '3%',\r\n    right: '4%',\r\n    bottom: '3%',\r\n    containLabel: true\r\n  },\r\n  xAxis: {\r\n    type: 'value'\r\n  },\r\n  yAxis: {\r\n    type: 'category',\r\n    data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n  },\r\n  series: [\r\n    {\r\n      name: '直接访问',\r\n      type: 'bar',\r\n      stack: '总量',\r\n      label: {\r\n        normal: {\r\n          show: true,\r\n          position: 'insideRight'\r\n        }\r\n      },\r\n      data: [320, 302, 301, 334, 390, 330, 320]\r\n    },\r\n    {\r\n      name: '邮件营销',\r\n      type: 'bar',\r\n      stack: '总量',\r\n      label: {\r\n        normal: {\r\n          show: true,\r\n          position: 'insideRight'\r\n        }\r\n      },\r\n      data: [120, 132, 101, 134, 90, 230, 210]\r\n    },\r\n    {\r\n      name: '联盟广告',\r\n      type: 'bar',\r\n      stack: '总量',\r\n      label: {\r\n        normal: {\r\n          show: true,\r\n          position: 'insideRight'\r\n        }\r\n      },\r\n      data: [220, 182, 191, 234, 290, 330, 310]\r\n    },\r\n    {\r\n      name: '视频广告',\r\n      type: 'bar',\r\n      stack: '总量',\r\n      label: {\r\n        normal: {\r\n          show: true,\r\n          position: 'insideRight'\r\n        }\r\n      },\r\n      data: [150, 212, 201, 154, 190, 330, 410]\r\n    },\r\n    {\r\n      name: '搜索引擎',\r\n      type: 'bar',\r\n      stack: '总量',\r\n      label: {\r\n        normal: {\r\n          show: true,\r\n          position: 'insideRight'\r\n        }\r\n      },\r\n      data: [820, 832, 901, 934, 1290, 1330, 1320]\r\n    }\r\n  ]\r\n};","import * as actionType from '../../constants/charts'\r\n\r\nexport const set_batch = (set_name,batchs) => ({\r\n    type: actionType.SAVE_BATCHS,\r\n    set_name,batchs\r\n})\r\n","import React, { Component } from 'react'\r\nimport API from '../../api/service'\r\nimport { Card, Select, Row, Col, Statistic, Empty, message } from 'antd';\r\nimport * as tabpanes from '../../redux/actions/tabpanes'\r\nimport * as charts from '../../redux/actions/charts'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport './ChartsMain.css'\r\n\r\nconst { Option } = Select;\r\nconst gridStyle = {\r\n  height: '250px',\r\n  width: '25%',\r\n  textAlign: 'center',\r\n};\r\nclass ChartsMain extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      batchs: [],\r\n      allOfBatchs: [] //批次数组\r\n    }\r\n  }\r\n  onClick = ({ name, path }) => {\r\n    // 把这些batch号存到name名下的数组中\r\n    this.props.set_batch(name, this.state.batchs)\r\n\r\n    // 先缓存操作前的panes数组\r\n    this.props.cachePanes()\r\n    // panes进行增减操作\r\n    this.props.addTabList({\r\n      key: path,\r\n      title: name,\r\n      closable: true\r\n    })\r\n  }\r\n  datasetClick = ({ name, path }) => {\r\n    this.props.set_batch(name, this.state.batchs.length ? this.state.batchs : this.state.allOfBatchs.map(item => item.batch))\r\n\r\n    // 先缓存操作前的panes数组\r\n    this.props.cachePanes()\r\n    // panes进行增减操作\r\n    this.props.addTabList({\r\n      key: path,\r\n      title: name,\r\n      closable: true\r\n    })\r\n  }\r\n  singleClick = (params) => {\r\n    // batch只能选一个提示，退出\r\n    if (this.state.batchs.length !== 1) {\r\n      message.warn('Please select only one match.')\r\n      return\r\n    }\r\n    this.onClick(params)\r\n  }\r\n  multipleClick = (params) => {\r\n    // 如果是没有batch条件提示，退出\r\n    if (this.state.batchs.length === 0) {\r\n      message.warn('Please select only one match.')\r\n      return\r\n    }\r\n    this.onClick(params)\r\n  }\r\n  componentWillMount() {\r\n    this.getAllOfBatchs()\r\n  }\r\n  getAllOfBatchs = () => {\r\n    API.getAllOfBatchs().then(res => {\r\n      if (res.data.success) {\r\n        this.setState({\r\n          allOfBatchs: res.data.data\r\n        })\r\n      }\r\n    })\r\n  }\r\n  handleChange = (value) => {\r\n    this.setState({ batchs: value })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='ChartsMain'>\r\n        {/* 选择数据 */}\r\n        <div className='shadow-card'>\r\n          Choose a batch\r\n            <Select\r\n            mode=\"multiple\"\r\n            style={{ width: '100%' }}\r\n            placeholder=\"Please select\"\r\n            defaultValue={[]}\r\n            onChange={this.handleChange}\r\n          >\r\n            {\r\n              this.state.allOfBatchs.map(item => <Option key={item.batch}>{item.opposition}</Option>)\r\n            }\r\n          </Select>\r\n        </div>\r\n        {/* 卡片展示 */}\r\n        <div className='StatementMain shadow-card' style={{ marginTop: '50px' }}>\r\n          <Card title=\"Dash-Charts\" >\r\n            <Card.Grid onClick={() => this.multipleClick({ name: 'Dash_Financials', path: `/Dash-Financials` })} style={gridStyle}>\r\n              <img src=\"./images/linetest.png\" alt=\"\" />\r\n              <h3>Dash_Financials</h3>\r\n            </Card.Grid>\r\n            <Card.Grid onClick={() => this.multipleClick({ name: 'Dash_Attendance', path: `/Dash-Attendance` })} style={gridStyle}>\r\n              <img src=\"./images/linetest.png\" alt=\"\" />\r\n              <h3>Dash_Attendance</h3>\r\n            </Card.Grid>\r\n            <Card.Grid onClick={() => this.multipleClick({ name: 'Dash_TicketTypes', path: `/Dash-TicketTypes` })} style={gridStyle}>\r\n              <img src=\"./images/compound.jpg\" alt=\"\" />\r\n              <h3>Dash_TicketTypes</h3>\r\n            </Card.Grid>\r\n            <Card.Grid onClick={() => this.multipleClick({ name: 'Dash_PricingTiers', path: `/Dash-PricingTiers` })} style={gridStyle}>\r\n              <img src=\"./images/compound.jpg\" alt=\"\" />\r\n              <h3>Dash_PricingTiers</h3>\r\n            </Card.Grid>\r\n          </Card>\r\n          <Card title=\"Single field\" className='StatementMain'>\r\n            <Card.Grid onClick={() => this.singleClick({ name: 'Sell_ticket', path: `/cust-selticket` })} style={gridStyle}>\r\n              <img src=\"./images/pietest.jpg\" alt=\"\" />\r\n              <h3>Sell_ticket</h3>\r\n            </Card.Grid>\r\n            <Card.Grid onClick={() => this.singleClick({ name: 'Income_ticket', path: `/cust-incticket` })} style={gridStyle}>\r\n              <img src=\"./images/nestPie.jpg\" alt=\"\" />\r\n              <h3>Income_ticket</h3>\r\n            </Card.Grid>\r\n            <Card.Grid onClick={() => this.datasetClick({ name: 'Income_ticket_dataset', path: `/cust-incticketDS` })} style={gridStyle}>\r\n              <img src=\"./images/sharedataset.jpg\" alt=\"\" />\r\n              <h3>Income_ticket_dataset</h3>\r\n            </Card.Grid>\r\n          </Card>\r\n          {/* <Card title=\"DataSet\" className='StatementMain'>\r\n            <Card.Grid onClick={() => this.datasetClick({ name: 'Income_Cartesian', path: `/cust-incCartesian` })} style={gridStyle}>\r\n              <img src=\"./images/heatmap-cartesian.jpg\" alt=\"\" />\r\n              <h3>Income_Cartesian</h3>\r\n            </Card.Grid>\r\n          </Card> */}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownnProps) => ({\r\n  rdx_menuData: state.tabpanes.menuData,\r\n  rdx_activeKey: state.tabpanes.activeKey\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  addTabList: bindActionCreators(tabpanes.addTabList, dispatch),\r\n  cachePanes: bindActionCreators(tabpanes.cachePanes, dispatch),\r\n  set_batch: bindActionCreators(charts.set_batch, dispatch)\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartsMain)\r\n","import React, { Component } from 'react'\r\nimport Echarts from '../../../components/charts/Echarts'\r\n\r\nconst legend = [\r\n  {\r\n    name: 'Bundle',\r\n    value: (data) => JSON.parse(data['lr_promotions']).Bundle.sum\r\n  },\r\n  {\r\n    name: 'EB \"Full Price\"',\r\n    value: (data) => data.total_tics_income - (JSON.parse(data['lr_promotions']).total.sum)\r\n  },\r\n  {\r\n    name: 'EB Promos',\r\n    value: (data) => JSON.parse(data['lr_promotions']).total.sum\r\n  },\r\n  {\r\n    name: 'LBL card tics',\r\n    value: (data) => data.income_lbl_card_tics\r\n  },\r\n  {\r\n    name: 'Other tics',\r\n    value: (data) => data.income_other_tics\r\n  },\r\n  {\r\n    name: 'Groups',\r\n    value: (data) => data.income_groups_tickets\r\n  },\r\n  {\r\n    name: 'Total Merch/Food/Extras',\r\n    value: (data) => data.income_merch_other_none_group_packages\r\n  }\r\n]\r\n\r\nexport default class Dash_Financials extends Component {\r\n  mapper(statData) {\r\n    return  {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend.map(item=>item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: statData.oppositions\r\n      },\r\n      series: legend.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside'\r\n            }\r\n          },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='ChartView'>\r\n        <Echarts type='Dash_Financials' mapper={this.mapper}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Echarts from '../../../components/charts/Echarts'\r\n\r\nconst legend = [\r\n  {\r\n    name: 'Season Tics/Comps',\r\n    value: (data) => data.season_tics_comps\r\n  },\r\n  {\r\n    name: 'Bundle',\r\n    value: (data) => JSON.parse(data['lr_promotions']).Bundle.count\r\n  },\r\n  {\r\n    name: '\"Full\" Price',\r\n    value: (data) => data.tickers_sold - JSON.parse(data['lr_promotions']).total.count\r\n  },\r\n  {\r\n    name: 'Promos',\r\n    value: (data) => JSON.parse(data['lr_promotions']).total.count\r\n  },\r\n  {\r\n    name: 'Groups Total',\r\n    value: (data) => data.total_adults_groups + data.tot_child_groups\r\n  },\r\n  {\r\n    name: 'Total Scanned',\r\n    value: (data) => data.tickets_scanned\r\n  }\r\n]\r\n\r\nexport default class Dash_Attendance extends Component {\r\n  mapper(statData) {\r\n    return  {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: statData.oppositions\r\n      },\r\n      series: legend.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside'\r\n            }\r\n          },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='ChartView'>\r\n        <Echarts type='Dash_Attendance' mapper={this.mapper}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Echarts from '../../../components/charts/Echarts'\r\n\r\n// 票统计\r\nconst legend1 = [\r\n  {\r\n    name: 'Adults',\r\n    value: (data) => data.total_adults\r\n  },\r\n  {\r\n    name: 'Concessions',\r\n    value: (data) => data.total_concessions\r\n  },\r\n  {\r\n    name: 'Children',\r\n    value: (data) => data.total_children\r\n  },\r\n  {\r\n    name: 'Family1',\r\n    value: (data) => data.total_family1\r\n  },\r\n  {\r\n    name: 'Family2',\r\n    value: (data) => data.total_family2\r\n  }\r\n]\r\n// 票比例\r\nconst legend2 = [\r\n  {\r\n    name: 'Adults',\r\n    value: (data) => data.inc_audults\r\n  },\r\n  {\r\n    name: 'Concessions',\r\n    value: (data) => data.inc_concessions\r\n  },\r\n  {\r\n    name: 'Children',\r\n    value: (data) => data.inc_children\r\n  },\r\n  {\r\n    name: 'Family1',\r\n    value: (data) => data.inc_family1\r\n  },\r\n  {\r\n    name: 'Family2',\r\n    value: (data) => data.inc_family2\r\n  }\r\n]\r\n// 票收入统计\r\nconst legend3 = [\r\n  {\r\n    name: '% Adults',\r\n    value: (data) => (data.total_adults / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Concessions',\r\n    value: (data) => (data.total_concessions / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Children',\r\n    value: (data) => (data.total_children / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Family1',\r\n    value: (data) => (data.total_family1 / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Family2',\r\n    value: (data) => (data.total_family2 / (data.total_adults + data.total_concessions + data.total_children + data.total_family1 + data.total_family2)).toFixed(2)\r\n  }\r\n]\r\n// 票收入比例\r\nconst legend4 = [\r\n  {\r\n    name: '% Adults',\r\n    value: (data) => (data.inc_audults / (data.inc_audults + data.inc_concessions + data.inc_children + data.inc_family1 + data.inc_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Concessions',\r\n    value: (data) => (data.inc_concessions / (data.inc_audults + data.inc_concessions + data.inc_children + data.inc_family1 + data.inc_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Children',\r\n    value: (data) => (data.inc_children / (data.inc_audults + data.inc_concessions + data.inc_children + data.inc_family1 + data.inc_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Family1',\r\n    value: (data) => (data.inc_family1 / (data.inc_audults + data.inc_concessions + data.inc_children + data.inc_family1 + data.inc_family2)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Family2',\r\n    value: (data) => (data.inc_family2 / (data.inc_audults + data.inc_concessions + data.inc_children + data.inc_family1 + data.inc_family2)).toFixed(2)\r\n  }\r\n]\r\n\r\nexport default class Dash_TicketTypes extends Component {\r\n  mapper1(statData) {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend1.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: statData.oppositions\r\n      },\r\n      series: legend1.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside'\r\n            }\r\n          },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n  mapper2(statData) {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend2.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: statData.oppositions\r\n      },\r\n      series: legend2.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside'\r\n            }\r\n          },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n  mapper3(statData) {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          label: {\r\n            backgroundColor: '#6a7985'\r\n          }\r\n        }\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          saveAsImage: {}\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend3.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: statData.oppositions\r\n      },\r\n      series: legend3.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'line',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'top'\r\n            }\r\n          },\r\n          areaStyle: { normal: {} },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n  mapper4(statData) {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          label: {\r\n            backgroundColor: '#6a7985'\r\n          }\r\n        }\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          saveAsImage: {}\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend4.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: statData.oppositions\r\n      },\r\n      series: legend4.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'line',\r\n          stack: '总量',\r\n          areaStyle: {},\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside'\r\n            }\r\n          },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='ChartView'>\r\n        <div className='flex-row justify-around'>\r\n          <Echarts {...chartStyle} type='Dash_TicketTypes' mapper={this.mapper1} />\r\n          <Echarts {...chartStyle} type='Dash_TicketTypes' mapper={this.mapper2} />\r\n        </div>\r\n        <div className='flex-row justify-around'>\r\n          <Echarts {...chartStyle} type='Dash_TicketTypes' mapper={this.mapper3} />\r\n          <Echarts {...chartStyle} type='Dash_TicketTypes' mapper={this.mapper4} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst chartStyle = {\r\n  width: 700,\r\n  height: 400\r\n}\r\n","import React, { Component } from 'react'\r\nimport Echarts from '../../../components/charts/Echarts'\r\n\r\n// 票统计\r\nconst legend1 = [\r\n  {\r\n    name: 'Early Bird',\r\n    value: (data) => data.early_bird_tics\r\n  },\r\n  {\r\n    name: 'Advance',\r\n    value: (data) => data.advance_tics\r\n  },\r\n  {\r\n    name: 'Gameday',\r\n    value: (data) => data.gameday_tics\r\n  },\r\n  {\r\n    name: 'Other',\r\n    value: (data) => data.other_tics\r\n  }\r\n]\r\n// 票比例\r\nconst legend2 = [\r\n  {\r\n    name: 'Early Bird',\r\n    value: (data) => data.inc_early_bird\r\n  },\r\n  {\r\n    name: 'Advance',\r\n    value: (data) => data.inc_advance\r\n  },\r\n  {\r\n    name: 'Gameday',\r\n    value: (data) => data.inc_gameday\r\n  },\r\n  {\r\n    name: 'Other',\r\n    value: (data) => data.inc_other\r\n  }\r\n]\r\n// 票收入统计\r\nconst legend3 = [\r\n  {\r\n    name: '% Early Bird',\r\n    value: (data) => (data.early_bird_tics/(data.early_bird_tics+data.advance_tics+data.gameday_tics)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Advance',\r\n    value: (data) => (data.advance_tics/(data.early_bird_tics+data.advance_tics+data.gameday_tics)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Gameday',\r\n    value: (data) => (data.gameday_tics/(data.early_bird_tics+data.advance_tics+data.gameday_tics)).toFixed(2)\r\n  }\r\n]\r\n// 票收入比例\r\nconst legend4 = [\r\n  {\r\n    name: '% Early Bird',\r\n    value: (data) => (data.inc_early_bird/(data.inc_early_bird+data.inc_advance+data.inc_gameday)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Advance',\r\n    value: (data) =>  (data.inc_advance/(data.inc_early_bird+data.inc_advance+data.inc_gameday)).toFixed(2)\r\n  },\r\n  {\r\n    name: '% Gameday',\r\n    value: (data) =>  (data.inc_gameday/(data.inc_early_bird+data.inc_advance+data.inc_gameday)).toFixed(2)\r\n  }\r\n]\r\n\r\nexport default class Dash_PricingTiers extends Component {\r\n  mapper1(statData) {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend1.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: statData.oppositions\r\n      },\r\n      series: legend1.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside'\r\n            }\r\n          },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n  mapper2(statData) {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend2.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: statData.oppositions\r\n      },\r\n      series: legend2.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'bar',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside'\r\n            }\r\n          },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n  mapper3(statData) {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          label: {\r\n            backgroundColor: '#6a7985'\r\n          }\r\n        }\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          saveAsImage: {}\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend3.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: statData.oppositions\r\n      },\r\n      series: legend3.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'line',\r\n          stack: '总量',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'top'\r\n            }\r\n          },\r\n          areaStyle: { normal: {} },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n  mapper4(statData) {\r\n    return {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          label: {\r\n            backgroundColor: '#6a7985'\r\n          }\r\n        }\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          saveAsImage: {}\r\n        }\r\n      },\r\n      legend: {\r\n        data: legend4.map(item => item.name)\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: statData.oppositions\r\n      },\r\n      series: legend4.map(item => {\r\n        return {\r\n          name: item.name,\r\n          type: 'line',\r\n          stack: '总量',\r\n          areaStyle: {},\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'inside'\r\n            }\r\n          },\r\n          data: statData.result.map(stat => {\r\n            return item.value(stat)\r\n          })\r\n        }\r\n      })\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='ChartView'>\r\n        <div className='flex-row justify-around'>\r\n          <Echarts {...chartStyle} type='Dash_PricingTiers' mapper={this.mapper1} />\r\n          <Echarts {...chartStyle} type='Dash_PricingTiers' mapper={this.mapper2} />\r\n        </div>\r\n        <div className='flex-row justify-around'>\r\n          <Echarts {...chartStyle} type='Dash_PricingTiers' mapper={this.mapper3} />\r\n          <Echarts {...chartStyle} type='Dash_PricingTiers' mapper={this.mapper4} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst chartStyle = {\r\n  width: 700,\r\n  height: 400\r\n}\r\n","import React from 'react';\r\nimport MainView from '../views/MainView';\r\nimport HomePage from '../views/HomePage/HomePage';\r\nimport DataInput from '../views/DataInput/DataInput';\r\nimport TestQuery from '../views/Query/testQuery/TestQuery';\r\nimport StatisticsMain from '../views/Statistics/StatementMain';\r\nimport StatisticsDetail from '../views/Statistics/Detail/StatisticsDetail';\r\nimport TestLine from '../views/Statistics/testLine/TestLine';\r\nimport ChartsMain from '../views/Charts/ChartsMain';\r\nimport { store } from '../redux/store';\r\nimport { KeepAlive } from 'react-keep-alive';\r\n// 图表\r\nimport DashFinancials from '../views/Charts/pages/Dash_Financials';\r\nimport DashAttendance from '../views/Charts/pages/Dash_Attendance';\r\nimport DashTicketTypes from '../views/Charts/pages/Dash_TicketTypes';\r\nimport DashPricingTiers from '../views/Charts/pages/Dash_PricingTiers';\r\nimport Sellticket from '../views/Charts/pages/Sell_ticket';\r\nimport Incometicket from '../views/Charts/pages/Income_ticket';\r\nimport Incometicketdataset from '../views/Charts/pages/Income_ticket_dataset';\r\nimport IncomeCartesian from '../views/Charts/pages/Income_Cartesian';\r\nconsole.log('sss',DashFinancials)\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    component: MainView,\r\n    routes: [\r\n      {\r\n        path: '/homepage',\r\n        component: HomePage\r\n      },\r\n      {\r\n        path: '/query',\r\n        component: TestQuery\r\n      },\r\n      {\r\n        path: '/input',\r\n        component: DataInput,\r\n        render: props => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive = !store\r\n            .getState()\r\n            .tabpanes.lastPanes.some(\r\n              item => item.key === props.location.pathname\r\n            );\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <DataInput />\r\n            </KeepAlive>\r\n          );\r\n        }\r\n      },\r\n      // 统计\r\n      {\r\n        path: '/statement',\r\n        exact: true,\r\n        component: StatisticsMain\r\n      },\r\n      {\r\n        path: '/statement/stat-detail/:batch',\r\n        component: StatisticsDetail\r\n      },\r\n      {\r\n        path: '/statement/testline',\r\n        unmount: true,\r\n        component: TestLine\r\n      },\r\n      // 图表\r\n      {\r\n        path: '/charts',\r\n        exact: true,\r\n        component: ChartsMain\r\n      },\r\n      {\r\n        path: '/Dash-Financials',\r\n        exact: true,\r\n        render: (props) => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive =!store.getState().tabpanes.lastPanes.some(item => item.key === props.location.pathname)\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <DashFinancials />\r\n            </KeepAlive>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        path: '/Dash-Attendance',\r\n        exact: true,\r\n        render: props => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive = !store\r\n            .getState()\r\n            .tabpanes.lastPanes.some(\r\n              item => item.key === props.location.pathname\r\n            );\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <DashAttendance />\r\n            </KeepAlive>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        path: '/Dash-TicketTypes',\r\n        exact: true,\r\n        render: props => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive = !store\r\n            .getState()\r\n            .tabpanes.lastPanes.some(\r\n              item => item.key === props.location.pathname\r\n            );\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <DashTicketTypes />\r\n            </KeepAlive>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        path: '/Dash-PricingTiers',\r\n        exact: true,\r\n        render: props => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive = !store\r\n            .getState()\r\n            .tabpanes.lastPanes.some(\r\n              item => item.key === props.location.pathname\r\n            );\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <DashPricingTiers />\r\n            </KeepAlive>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        path: '/cust-selticket',\r\n        exact: true,\r\n        render: props => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive = !store\r\n            .getState()\r\n            .tabpanes.lastPanes.some(\r\n              item => item.key === props.location.pathname\r\n            );\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <Sellticket />\r\n            </KeepAlive>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        path: '/cust-incticket',\r\n        exact: true,\r\n        render: props => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive = !store\r\n            .getState()\r\n            .tabpanes.lastPanes.some(\r\n              item => item.key === props.location.pathname\r\n            );\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <Incometicket />\r\n            </KeepAlive>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        path: '/cust-incticketDS',\r\n        exact: true,\r\n        render: props => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive = !store\r\n            .getState()\r\n            .tabpanes.lastPanes.some(\r\n              item => item.key === props.location.pathname\r\n            );\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <Incometicketdataset />\r\n            </KeepAlive>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        path: '/cust-incCartesian',\r\n        exact: true,\r\n        render: props => {\r\n          // 对比上次操作前的panes数组，看看需不需要缓存页面\r\n          let alive = !store\r\n            .getState()\r\n            .tabpanes.lastPanes.some(\r\n              item => item.key === props.location.pathname\r\n            );\r\n          return (\r\n            <KeepAlive name={props.location.pathname} disabled={alive}>\r\n              <IncomeCartesian />\r\n            </KeepAlive>\r\n          );\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","function _interopDefault(ex) {\r\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\r\n}\r\n\r\n// var reactRouter = require('react-router')\r\nvar reactRouter = require('react-router-cache-route');\r\nvar React = _interopDefault(require('react'));\r\n\r\nexport function matchRoutes(\r\n  routes,\r\n  pathname,\r\n  /*not public API*/\r\n  branch\r\n) {\r\n  if (branch === void 0) {\r\n    branch = [];\r\n  }\r\n\r\n  routes.some(function(route) {\r\n    var match = route.path\r\n      ? reactRouter.matchPath(pathname, route)\r\n      : branch.length\r\n      ? branch[branch.length - 1].match // use parent match\r\n      : reactRouter.Router.computeRootMatch(pathname); // use default \"root\" match\r\n\r\n    if (match) {\r\n      branch.push({\r\n        route: route,\r\n        match: match\r\n      });\r\n\r\n      if (route.routes) {\r\n        matchRoutes(route.routes, pathname, branch);\r\n      }\r\n    }\r\n\r\n    return match;\r\n  });\r\n  return branch;\r\n}\r\n\r\nfunction _extends() {\r\n  _extends =\r\n    Object.assign ||\r\n    function(target) {\r\n      for (var i = 1; i < arguments.length; i++) {\r\n        var source = arguments[i];\r\n\r\n        for (var key in source) {\r\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n            target[key] = source[key];\r\n          }\r\n        }\r\n      }\r\n\r\n      return target;\r\n    };\r\n\r\n  return _extends.apply(this, arguments);\r\n}\r\n\r\nexport function renderRoutes(routes, extraProps, switchProps) {\r\n  if (extraProps === void 0) {\r\n    extraProps = {};\r\n  }\r\n\r\n  if (switchProps === void 0) {\r\n    switchProps = {};\r\n  }\r\n\r\n  return routes\r\n    ? React.createElement(\r\n        reactRouter.CacheSwitch,\r\n        switchProps,\r\n        routes.map(function(route, i) {\r\n          return React.createElement(reactRouter.CacheRoute, {\r\n            key: route.key || i,\r\n            path: route.path,\r\n            exact: route.exact,\r\n            strict: route.strict,\r\n            when: route.when,\r\n            cacheKey: route.cacheKey,\r\n            unmount: false,\r\n            behavior: cached =>\r\n              cached ? { style: { display: 'none' } } : undefined,\r\n            render: function render(props) {\r\n              return route.render\r\n                ? route.render(\r\n                    _extends({}, props, extraProps, {\r\n                      route: route\r\n                    })\r\n                  )\r\n                : React.createElement(\r\n                    route.component,\r\n                    _extends({}, props, extraProps, {\r\n                      route: route\r\n                    })\r\n                  );\r\n            }\r\n          });\r\n        })\r\n      )\r\n    : null;\r\n}\r\n\r\n// exports.matchRoutes = matchRoutes\r\n// exports.renderRoutes = renderRoutes\r\n\r\n// export default { matchRoutes, renderRoutes }\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport Routes from './routes';\r\nimport { renderRoutes } from './routes/react-router-config' //为了适应cache组件这个renderRouter稍微改了下\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        {renderRoutes(Routes)}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'antd/dist/antd.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './redux/store';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { Provider as KkpProvider } from 'react-keep-alive';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate persistor={persistor}>\r\n      <KkpProvider>\r\n        <App />\r\n      </KkpProvider>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","// import * as ActionTypes from '../../actions';\r\n\r\nconst initialState = {};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as ActionTypes from '../../constants/tabpanes';\r\n\r\n// Tab签的默认值\r\nconst initialPanes = [\r\n  {\r\n    title: 'homepage',\r\n    key: '/homepage',\r\n    closable: false\r\n  }\r\n];\r\n\r\nconst initialState = {\r\n  //tab 数组\r\n  panes: initialPanes,\r\n  // 记录各种操作前的panes\r\n  lastPanes: [],\r\n  //tab 活动页key\r\n  activeKey: initialPanes[0].key\r\n};\r\nconsole.log('初始化');\r\nconsole.log(initialState);\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    // 增加一个Tab页\r\n    case ActionTypes.PUSH_TAB_LIST:\r\n      //检查是否有这个key\r\n      if (state.panes.some(item => item.key === action.tabItem.key)) {\r\n        //有\r\n        push(action.tabItem.key);\r\n        return { ...state, activeKey: action.tabItem.key };\r\n      } else {\r\n        //没有\r\n        //推一个tab\r\n        let arr = [...state.panes];\r\n        arr.push(action.tabItem);\r\n        push(action.tabItem.key);\r\n        return { ...state, panes: arr, activeKey: action.tabItem.key };\r\n      }\r\n    // 删除一个Tab页\r\n    case ActionTypes.REMOVE_TAB_LIST:\r\n      let nextPanes = state.panes.filter(item => item.key !== action.key);\r\n      let activeKey = nextPanes[nextPanes.length - 1].key;\r\n      push(activeKey);\r\n      return { ...state, panes: nextPanes, activeKey };\r\n    // 清空Tab页\r\n    case ActionTypes.CLEAR_TAB_LIST:\r\n      //清空,只保留closable false的页签\r\n      return {\r\n        ...state,\r\n        panes: state.panes.filter(item => item.closable === false)\r\n      };\r\n    // 设置active签\r\n    case ActionTypes.SET_ACTIVE:\r\n      push(action.key);\r\n      return { ...state, activeKey: action.key };\r\n    // 监听哈希值\r\n    case ActionTypes.LISTEN_HASH:\r\n      if (state.panes.some(item => item.key === action.hash)) {\r\n        return { ...state, activeKey: action.hash };\r\n      }\r\n      return { ...state };\r\n    case ActionTypes.HEADER_MENU:\r\n      return { ...state, menuData: action.data };\r\n    // 缓存上一次操作的panes状态\r\n    case ActionTypes.CACHE_PANES:\r\n      return { ...state, lastPanes: [...state.panes] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nfunction push(url) {\r\n  window.location.href =\r\n    window.location.origin + window.location.pathname + '#' + url;\r\n}\r\n","import * as ActionTypes from '../../constants/charts';\r\n\r\nconst initialState = {\r\n  // ↓用于存放batch号的，给页面传参用\r\n  Dash_Financials: [],\r\n  Dash_Attendance: [],\r\n  Dash_TicketTypes: [],\r\n  Dash_PricingTiers: [],\r\n  Sell_ticket: [],\r\n  Income_ticket: [],\r\n  Income_ticket_dataset: [],\r\n  Income_Cartesian: []\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    // 存放对应图表batch数据\r\n    case ActionTypes.SAVE_BATCHS:\r\n      return { ...state, [action.set_name]: action.batchs };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport appReducer from './app';\r\nimport tabpanes from './tabpanes';\r\nimport charts from './charts';\r\n\r\nlet rootReducer = combineReducers({\r\n  appReducer,\r\n  tabpanes,\r\n  charts\r\n});\r\n\r\nexport default persistReducer(\r\n  {\r\n    key: 'root',\r\n    storage\r\n  },\r\n  rootReducer\r\n);\r\n","import { applyMiddleware } from 'redux';\r\n// import thunk from 'redux-thunk';\r\n\r\nexport default applyMiddleware();\r\n","import { createStore } from 'redux';\r\nimport rootReducer from '../reducers';\r\nimport middlewares from './middlewares';\r\n\r\nexport default function configureStore(initialState) {\r\n  return createStore(rootReducer, initialState, middlewares);\r\n}\r\n"],"sourceRoot":""}